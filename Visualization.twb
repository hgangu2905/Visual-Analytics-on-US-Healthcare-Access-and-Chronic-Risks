<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.25.0114.1153                               -->
<workbook original-version='18.1' source-build='2024.3.3 (20243.25.0114.1153)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AnimationOnByDefault />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <VizInTooltipHideWorksheet />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Top N' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='4'>
        <calculation class='tableau' formula='4' />
        <range granularity='1' max='20' min='1' />
      </column>
    </datasource>
    <datasource caption='CDC_BRFSS_2017_2021_Final+' inline='true' name='federated.1pi8yjg1rfn4wk10t96ef1d5rgyu' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='CDC_BRFSS_2017_2021_Final' name='textscan.175trke08a5f1z16xrdok0zs5hhh'>
            <connection class='textscan' directory='C:/Users/harik/OneDrive/Documents/SU/Projects/Healthcare_Inequality/data/merged' filename='CDC_BRFSS_2017_2021_Final.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation type='collection'>
          <relation connection='textscan.175trke08a5f1z16xrdok0zs5hhh' name='CDC_BRFSS_2017_2021_Final.csv' table='[CDC_BRFSS_2017_2021_Final#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
              <column datatype='integer' name='Year' ordinal='0' />
              <column datatype='string' name='State' ordinal='1' />
              <column datatype='string' name='Class' ordinal='2' />
              <column datatype='string' name='Topic' ordinal='3' />
              <column datatype='string' name='Question' ordinal='4' />
              <column datatype='string' name='Response' ordinal='5' />
              <column datatype='string' name='Breakout' ordinal='6' />
              <column datatype='string' name='Breakout_Category' ordinal='7' />
              <column datatype='real' name='Sample_Size' ordinal='8' />
              <column datatype='real' name='CI_Lower' ordinal='9' />
              <column datatype='real' name='CI_Upper' ordinal='10' />
              <column datatype='string' name='Data_Source' ordinal='11' />
            </columns>
          </relation>
          <relation connection='textscan.175trke08a5f1z16xrdok0zs5hhh' name='CMS_Inpatient_2017_2021_Final.csv' table='[CMS_Inpatient_2017_2021_Final#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
              <column datatype='string' name='State' ordinal='0' />
              <column datatype='integer' name='DRG_Code' ordinal='1' />
              <column datatype='string' name='DRG_Description' ordinal='2' />
              <column datatype='integer' name='Total_Discharges' ordinal='3' />
              <column datatype='real' name='Avg_Charge_Submitted' ordinal='4' />
              <column datatype='real' name='Avg_Total_Payment' ordinal='5' />
              <column datatype='real' name='Avg_Medicare_Payment' ordinal='6' />
              <column datatype='integer' name='Year' ordinal='7' />
            </columns>
          </relation>
          <relation connection='textscan.175trke08a5f1z16xrdok0zs5hhh' name='CMS_SNF3_2017_2021_Final.csv' table='[CMS_SNF3_2017_2021_Final#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
              <column datatype='string' name='State' ordinal='0' />
              <column datatype='integer' name='Total Original Medicare Part A Enrollees' ordinal='1' />
              <column datatype='integer' name='Total Persons With Utilization' ordinal='2' />
              <column datatype='integer' name='Total Covered Admissions' ordinal='3' />
              <column datatype='real' name='Covered Admissions Per Person With Utilization' ordinal='4' />
              <column datatype='real' name='Covered Admissions Per 1,000 Original Medicare Part A Enrollees' ordinal='5' />
              <column datatype='integer' name='Total Covered Days of Care' ordinal='6' />
              <column datatype='real' name='Covered Days of Care Per Covered Admission' ordinal='7' />
              <column datatype='real' name='Covered Days of Care Per Person With Utilization' ordinal='8' />
              <column datatype='integer' name='Covered Days of Care Per 1,000 Original Medicare Part A Enrollees' ordinal='9' />
              <column datatype='integer' name='Total Program Payments' ordinal='10' />
              <column datatype='integer' name='Program Payments Per Covered Admission' ordinal='11' />
              <column datatype='integer' name='Program Payments Per Covered Day' ordinal='12' />
              <column datatype='integer' name='Program Payments Per Person With Utilization' ordinal='13' />
              <column datatype='integer' name='Program Payments Per Original Medicare Part A Enrollee' ordinal='14' />
              <column datatype='real' name='Total Persons With Coinsurance 1' ordinal='15' />
              <column datatype='integer' name='Total Coinsurance Days' ordinal='16' />
              <column datatype='real' name='Coinsurance Days Per Person With Coinsurance 1' ordinal='17' />
              <column datatype='integer' name='Total Coinsurance Payments' ordinal='18' />
              <column datatype='real' name='Coinsurance Payments Per Person With Coinsurance 1' ordinal='19' />
              <column datatype='integer' name='Discharged Dead' ordinal='20' />
              <column datatype='integer' name='Year' ordinal='21' />
              <column datatype='real' name='Total Persons With Coinsurance¹' ordinal='22' />
              <column datatype='real' name='Coinsurance Days Per Person With Coinsurance¹' ordinal='23' />
              <column datatype='real' name='Coinsurance Payments Per Person With Coinsurance¹' ordinal='24' />
            </columns>
          </relation>
          <relation connection='textscan.175trke08a5f1z16xrdok0zs5hhh' name='KFF_Insurance_2017_2021_Final.csv' table='[KFF_Insurance_2017_2021_Final#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
              <column datatype='string' name='State' ordinal='0' />
              <column datatype='real' name='Employer' ordinal='1' />
              <column datatype='real' name='Non-Group' ordinal='2' />
              <column datatype='real' name='Medicaid' ordinal='3' />
              <column datatype='real' name='Medicare' ordinal='4' />
              <column datatype='real' name='Military' ordinal='5' />
              <column datatype='real' name='Uninsured' ordinal='6' />
              <column datatype='real' name='Total' ordinal='7' />
              <column datatype='integer' name='Year' ordinal='8' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[Avg_Charge_Submitted]' value='[CMS_Inpatient_2017_2021_Final.csv].[Avg_Charge_Submitted]' />
          <map key='[Avg_Medicare_Payment]' value='[CMS_Inpatient_2017_2021_Final.csv].[Avg_Medicare_Payment]' />
          <map key='[Avg_Total_Payment]' value='[CMS_Inpatient_2017_2021_Final.csv].[Avg_Total_Payment]' />
          <map key='[Breakout]' value='[CDC_BRFSS_2017_2021_Final.csv].[Breakout]' />
          <map key='[Breakout_Category]' value='[CDC_BRFSS_2017_2021_Final.csv].[Breakout_Category]' />
          <map key='[CI_Lower]' value='[CDC_BRFSS_2017_2021_Final.csv].[CI_Lower]' />
          <map key='[CI_Upper]' value='[CDC_BRFSS_2017_2021_Final.csv].[CI_Upper]' />
          <map key='[Class]' value='[CDC_BRFSS_2017_2021_Final.csv].[Class]' />
          <map key='[Coinsurance Days Per Person With Coinsurance 1]' value='[CMS_SNF3_2017_2021_Final.csv].[Coinsurance Days Per Person With Coinsurance 1]' />
          <map key='[Coinsurance Days Per Person With Coinsurance¹]' value='[CMS_SNF3_2017_2021_Final.csv].[Coinsurance Days Per Person With Coinsurance¹]' />
          <map key='[Coinsurance Payments Per Person With Coinsurance 1]' value='[CMS_SNF3_2017_2021_Final.csv].[Coinsurance Payments Per Person With Coinsurance 1]' />
          <map key='[Coinsurance Payments Per Person With Coinsurance¹]' value='[CMS_SNF3_2017_2021_Final.csv].[Coinsurance Payments Per Person With Coinsurance¹]' />
          <map key='[Covered Admissions Per 1,000 Original Medicare Part A Enrollees]' value='[CMS_SNF3_2017_2021_Final.csv].[Covered Admissions Per 1,000 Original Medicare Part A Enrollees]' />
          <map key='[Covered Admissions Per Person With Utilization]' value='[CMS_SNF3_2017_2021_Final.csv].[Covered Admissions Per Person With Utilization]' />
          <map key='[Covered Days of Care Per 1,000 Original Medicare Part A Enrollees]' value='[CMS_SNF3_2017_2021_Final.csv].[Covered Days of Care Per 1,000 Original Medicare Part A Enrollees]' />
          <map key='[Covered Days of Care Per Covered Admission]' value='[CMS_SNF3_2017_2021_Final.csv].[Covered Days of Care Per Covered Admission]' />
          <map key='[Covered Days of Care Per Person With Utilization]' value='[CMS_SNF3_2017_2021_Final.csv].[Covered Days of Care Per Person With Utilization]' />
          <map key='[DRG_Code]' value='[CMS_Inpatient_2017_2021_Final.csv].[DRG_Code]' />
          <map key='[DRG_Description]' value='[CMS_Inpatient_2017_2021_Final.csv].[DRG_Description]' />
          <map key='[Data_Source]' value='[CDC_BRFSS_2017_2021_Final.csv].[Data_Source]' />
          <map key='[Discharged Dead]' value='[CMS_SNF3_2017_2021_Final.csv].[Discharged Dead]' />
          <map key='[Employer]' value='[KFF_Insurance_2017_2021_Final.csv].[Employer]' />
          <map key='[Medicaid]' value='[KFF_Insurance_2017_2021_Final.csv].[Medicaid]' />
          <map key='[Medicare]' value='[KFF_Insurance_2017_2021_Final.csv].[Medicare]' />
          <map key='[Military]' value='[KFF_Insurance_2017_2021_Final.csv].[Military]' />
          <map key='[Non-Group]' value='[KFF_Insurance_2017_2021_Final.csv].[Non-Group]' />
          <map key='[Program Payments Per Covered Admission]' value='[CMS_SNF3_2017_2021_Final.csv].[Program Payments Per Covered Admission]' />
          <map key='[Program Payments Per Covered Day]' value='[CMS_SNF3_2017_2021_Final.csv].[Program Payments Per Covered Day]' />
          <map key='[Program Payments Per Original Medicare Part A Enrollee]' value='[CMS_SNF3_2017_2021_Final.csv].[Program Payments Per Original Medicare Part A Enrollee]' />
          <map key='[Program Payments Per Person With Utilization]' value='[CMS_SNF3_2017_2021_Final.csv].[Program Payments Per Person With Utilization]' />
          <map key='[Question]' value='[CDC_BRFSS_2017_2021_Final.csv].[Question]' />
          <map key='[Response]' value='[CDC_BRFSS_2017_2021_Final.csv].[Response]' />
          <map key='[Sample_Size]' value='[CDC_BRFSS_2017_2021_Final.csv].[Sample_Size]' />
          <map key='[State (CMS_Inpatient_2017_2021_Final.csv)]' value='[CMS_Inpatient_2017_2021_Final.csv].[State]' />
          <map key='[State (CMS_SNF3_2017_2021_Final.csv)]' value='[CMS_SNF3_2017_2021_Final.csv].[State]' />
          <map key='[State (KFF_Insurance_2017_2021_Final.csv)]' value='[KFF_Insurance_2017_2021_Final.csv].[State]' />
          <map key='[State]' value='[CDC_BRFSS_2017_2021_Final.csv].[State]' />
          <map key='[Topic]' value='[CDC_BRFSS_2017_2021_Final.csv].[Topic]' />
          <map key='[Total Coinsurance Days]' value='[CMS_SNF3_2017_2021_Final.csv].[Total Coinsurance Days]' />
          <map key='[Total Coinsurance Payments]' value='[CMS_SNF3_2017_2021_Final.csv].[Total Coinsurance Payments]' />
          <map key='[Total Covered Admissions]' value='[CMS_SNF3_2017_2021_Final.csv].[Total Covered Admissions]' />
          <map key='[Total Covered Days of Care]' value='[CMS_SNF3_2017_2021_Final.csv].[Total Covered Days of Care]' />
          <map key='[Total Original Medicare Part A Enrollees]' value='[CMS_SNF3_2017_2021_Final.csv].[Total Original Medicare Part A Enrollees]' />
          <map key='[Total Persons With Coinsurance 1]' value='[CMS_SNF3_2017_2021_Final.csv].[Total Persons With Coinsurance 1]' />
          <map key='[Total Persons With Coinsurance¹]' value='[CMS_SNF3_2017_2021_Final.csv].[Total Persons With Coinsurance¹]' />
          <map key='[Total Persons With Utilization]' value='[CMS_SNF3_2017_2021_Final.csv].[Total Persons With Utilization]' />
          <map key='[Total Program Payments]' value='[CMS_SNF3_2017_2021_Final.csv].[Total Program Payments]' />
          <map key='[Total]' value='[KFF_Insurance_2017_2021_Final.csv].[Total]' />
          <map key='[Total_Discharges]' value='[CMS_Inpatient_2017_2021_Final.csv].[Total_Discharges]' />
          <map key='[Uninsured]' value='[KFF_Insurance_2017_2021_Final.csv].[Uninsured]' />
          <map key='[Year (CMS_Inpatient_2017_2021_Final.csv)]' value='[CMS_Inpatient_2017_2021_Final.csv].[Year]' />
          <map key='[Year (CMS_SNF3_2017_2021_Final.csv)]' value='[CMS_SNF3_2017_2021_Final.csv].[Year]' />
          <map key='[Year (KFF_Insurance_2017_2021_Final.csv)]' value='[KFF_Insurance_2017_2021_Final.csv].[Year]' />
          <map key='[Year]' value='[CDC_BRFSS_2017_2021_Final.csv].[Year]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[CDC_BRFSS_2017_2021_Final.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;₹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[CMS_Inpatient_2017_2021_Final.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;₹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[CMS_SNF3_2017_2021_Final.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;₹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[KFF_Insurance_2017_2021_Final.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;₹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[CDC_BRFSS_2017_2021_Final.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[CDC_BRFSS_2017_2021_Final.csv_936AA4FC498E47778ABFEACF320E8706]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[CDC_BRFSS_2017_2021_Final.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[CDC_BRFSS_2017_2021_Final.csv_936AA4FC498E47778ABFEACF320E8706]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Class</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Class]</local-name>
            <parent-name>[CDC_BRFSS_2017_2021_Final.csv]</parent-name>
            <remote-alias>Class</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[CDC_BRFSS_2017_2021_Final.csv_936AA4FC498E47778ABFEACF320E8706]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Topic</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Topic]</local-name>
            <parent-name>[CDC_BRFSS_2017_2021_Final.csv]</parent-name>
            <remote-alias>Topic</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[CDC_BRFSS_2017_2021_Final.csv_936AA4FC498E47778ABFEACF320E8706]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Question</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Question]</local-name>
            <parent-name>[CDC_BRFSS_2017_2021_Final.csv]</parent-name>
            <remote-alias>Question</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[CDC_BRFSS_2017_2021_Final.csv_936AA4FC498E47778ABFEACF320E8706]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Response</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Response]</local-name>
            <parent-name>[CDC_BRFSS_2017_2021_Final.csv]</parent-name>
            <remote-alias>Response</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[CDC_BRFSS_2017_2021_Final.csv_936AA4FC498E47778ABFEACF320E8706]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Breakout</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Breakout]</local-name>
            <parent-name>[CDC_BRFSS_2017_2021_Final.csv]</parent-name>
            <remote-alias>Breakout</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[CDC_BRFSS_2017_2021_Final.csv_936AA4FC498E47778ABFEACF320E8706]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Breakout_Category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Breakout_Category]</local-name>
            <parent-name>[CDC_BRFSS_2017_2021_Final.csv]</parent-name>
            <remote-alias>Breakout_Category</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[CDC_BRFSS_2017_2021_Final.csv_936AA4FC498E47778ABFEACF320E8706]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sample_Size</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sample_Size]</local-name>
            <parent-name>[CDC_BRFSS_2017_2021_Final.csv]</parent-name>
            <remote-alias>Sample_Size</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[CDC_BRFSS_2017_2021_Final.csv_936AA4FC498E47778ABFEACF320E8706]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CI_Lower</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CI_Lower]</local-name>
            <parent-name>[CDC_BRFSS_2017_2021_Final.csv]</parent-name>
            <remote-alias>CI_Lower</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[CDC_BRFSS_2017_2021_Final.csv_936AA4FC498E47778ABFEACF320E8706]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CI_Upper</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CI_Upper]</local-name>
            <parent-name>[CDC_BRFSS_2017_2021_Final.csv]</parent-name>
            <remote-alias>CI_Upper</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[CDC_BRFSS_2017_2021_Final.csv_936AA4FC498E47778ABFEACF320E8706]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Data_Source</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Data_Source]</local-name>
            <parent-name>[CDC_BRFSS_2017_2021_Final.csv]</parent-name>
            <remote-alias>Data_Source</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[CDC_BRFSS_2017_2021_Final.csv_936AA4FC498E47778ABFEACF320E8706]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State (CMS_Inpatient_2017_2021_Final.csv)]</local-name>
            <parent-name>[CMS_Inpatient_2017_2021_Final.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[CMS_Inpatient_2017_2021_Final.csv_83E4B37B076A4ECCBB2A2A7646EFEAD2]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DRG_Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DRG_Code]</local-name>
            <parent-name>[CMS_Inpatient_2017_2021_Final.csv]</parent-name>
            <remote-alias>DRG_Code</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[CMS_Inpatient_2017_2021_Final.csv_83E4B37B076A4ECCBB2A2A7646EFEAD2]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DRG_Description</remote-name>
            <remote-type>129</remote-type>
            <local-name>[DRG_Description]</local-name>
            <parent-name>[CMS_Inpatient_2017_2021_Final.csv]</parent-name>
            <remote-alias>DRG_Description</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[CMS_Inpatient_2017_2021_Final.csv_83E4B37B076A4ECCBB2A2A7646EFEAD2]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total_Discharges</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total_Discharges]</local-name>
            <parent-name>[CMS_Inpatient_2017_2021_Final.csv]</parent-name>
            <remote-alias>Total_Discharges</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[CMS_Inpatient_2017_2021_Final.csv_83E4B37B076A4ECCBB2A2A7646EFEAD2]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Avg_Charge_Submitted</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Avg_Charge_Submitted]</local-name>
            <parent-name>[CMS_Inpatient_2017_2021_Final.csv]</parent-name>
            <remote-alias>Avg_Charge_Submitted</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[CMS_Inpatient_2017_2021_Final.csv_83E4B37B076A4ECCBB2A2A7646EFEAD2]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Avg_Total_Payment</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Avg_Total_Payment]</local-name>
            <parent-name>[CMS_Inpatient_2017_2021_Final.csv]</parent-name>
            <remote-alias>Avg_Total_Payment</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[CMS_Inpatient_2017_2021_Final.csv_83E4B37B076A4ECCBB2A2A7646EFEAD2]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Avg_Medicare_Payment</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Avg_Medicare_Payment]</local-name>
            <parent-name>[CMS_Inpatient_2017_2021_Final.csv]</parent-name>
            <remote-alias>Avg_Medicare_Payment</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[CMS_Inpatient_2017_2021_Final.csv_83E4B37B076A4ECCBB2A2A7646EFEAD2]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year (CMS_Inpatient_2017_2021_Final.csv)]</local-name>
            <parent-name>[CMS_Inpatient_2017_2021_Final.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[CMS_Inpatient_2017_2021_Final.csv_83E4B37B076A4ECCBB2A2A7646EFEAD2]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State (CMS_SNF3_2017_2021_Final.csv)]</local-name>
            <parent-name>[CMS_SNF3_2017_2021_Final.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[CMS_SNF3_2017_2021_Final.csv_D7FF3BC054A74D188BA7505DFB8A0290]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Original Medicare Part A Enrollees</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total Original Medicare Part A Enrollees]</local-name>
            <parent-name>[CMS_SNF3_2017_2021_Final.csv]</parent-name>
            <remote-alias>Total Original Medicare Part A Enrollees</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[CMS_SNF3_2017_2021_Final.csv_D7FF3BC054A74D188BA7505DFB8A0290]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Persons With Utilization</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total Persons With Utilization]</local-name>
            <parent-name>[CMS_SNF3_2017_2021_Final.csv]</parent-name>
            <remote-alias>Total Persons With Utilization</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[CMS_SNF3_2017_2021_Final.csv_D7FF3BC054A74D188BA7505DFB8A0290]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Covered Admissions</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total Covered Admissions]</local-name>
            <parent-name>[CMS_SNF3_2017_2021_Final.csv]</parent-name>
            <remote-alias>Total Covered Admissions</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[CMS_SNF3_2017_2021_Final.csv_D7FF3BC054A74D188BA7505DFB8A0290]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Covered Admissions Per Person With Utilization</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Covered Admissions Per Person With Utilization]</local-name>
            <parent-name>[CMS_SNF3_2017_2021_Final.csv]</parent-name>
            <remote-alias>Covered Admissions Per Person With Utilization</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[CMS_SNF3_2017_2021_Final.csv_D7FF3BC054A74D188BA7505DFB8A0290]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Covered Admissions Per 1,000 Original Medicare Part A Enrollees</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Covered Admissions Per 1,000 Original Medicare Part A Enrollees]</local-name>
            <parent-name>[CMS_SNF3_2017_2021_Final.csv]</parent-name>
            <remote-alias>Covered Admissions Per 1,000 Original Medicare Part A Enrollees</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[CMS_SNF3_2017_2021_Final.csv_D7FF3BC054A74D188BA7505DFB8A0290]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Covered Days of Care</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total Covered Days of Care]</local-name>
            <parent-name>[CMS_SNF3_2017_2021_Final.csv]</parent-name>
            <remote-alias>Total Covered Days of Care</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[CMS_SNF3_2017_2021_Final.csv_D7FF3BC054A74D188BA7505DFB8A0290]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Covered Days of Care Per Covered Admission</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Covered Days of Care Per Covered Admission]</local-name>
            <parent-name>[CMS_SNF3_2017_2021_Final.csv]</parent-name>
            <remote-alias>Covered Days of Care Per Covered Admission</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[CMS_SNF3_2017_2021_Final.csv_D7FF3BC054A74D188BA7505DFB8A0290]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Covered Days of Care Per Person With Utilization</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Covered Days of Care Per Person With Utilization]</local-name>
            <parent-name>[CMS_SNF3_2017_2021_Final.csv]</parent-name>
            <remote-alias>Covered Days of Care Per Person With Utilization</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[CMS_SNF3_2017_2021_Final.csv_D7FF3BC054A74D188BA7505DFB8A0290]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Covered Days of Care Per 1,000 Original Medicare Part A Enrollees</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Covered Days of Care Per 1,000 Original Medicare Part A Enrollees]</local-name>
            <parent-name>[CMS_SNF3_2017_2021_Final.csv]</parent-name>
            <remote-alias>Covered Days of Care Per 1,000 Original Medicare Part A Enrollees</remote-alias>
            <ordinal>29</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[CMS_SNF3_2017_2021_Final.csv_D7FF3BC054A74D188BA7505DFB8A0290]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Program Payments</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total Program Payments]</local-name>
            <parent-name>[CMS_SNF3_2017_2021_Final.csv]</parent-name>
            <remote-alias>Total Program Payments</remote-alias>
            <ordinal>30</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[CMS_SNF3_2017_2021_Final.csv_D7FF3BC054A74D188BA7505DFB8A0290]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Program Payments Per Covered Admission</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Program Payments Per Covered Admission]</local-name>
            <parent-name>[CMS_SNF3_2017_2021_Final.csv]</parent-name>
            <remote-alias>Program Payments Per Covered Admission</remote-alias>
            <ordinal>31</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[CMS_SNF3_2017_2021_Final.csv_D7FF3BC054A74D188BA7505DFB8A0290]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Program Payments Per Covered Day</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Program Payments Per Covered Day]</local-name>
            <parent-name>[CMS_SNF3_2017_2021_Final.csv]</parent-name>
            <remote-alias>Program Payments Per Covered Day</remote-alias>
            <ordinal>32</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[CMS_SNF3_2017_2021_Final.csv_D7FF3BC054A74D188BA7505DFB8A0290]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Program Payments Per Person With Utilization</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Program Payments Per Person With Utilization]</local-name>
            <parent-name>[CMS_SNF3_2017_2021_Final.csv]</parent-name>
            <remote-alias>Program Payments Per Person With Utilization</remote-alias>
            <ordinal>33</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[CMS_SNF3_2017_2021_Final.csv_D7FF3BC054A74D188BA7505DFB8A0290]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Program Payments Per Original Medicare Part A Enrollee</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Program Payments Per Original Medicare Part A Enrollee]</local-name>
            <parent-name>[CMS_SNF3_2017_2021_Final.csv]</parent-name>
            <remote-alias>Program Payments Per Original Medicare Part A Enrollee</remote-alias>
            <ordinal>34</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[CMS_SNF3_2017_2021_Final.csv_D7FF3BC054A74D188BA7505DFB8A0290]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Persons With Coinsurance 1</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Persons With Coinsurance 1]</local-name>
            <parent-name>[CMS_SNF3_2017_2021_Final.csv]</parent-name>
            <remote-alias>Total Persons With Coinsurance 1</remote-alias>
            <ordinal>35</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[CMS_SNF3_2017_2021_Final.csv_D7FF3BC054A74D188BA7505DFB8A0290]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Coinsurance Days</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total Coinsurance Days]</local-name>
            <parent-name>[CMS_SNF3_2017_2021_Final.csv]</parent-name>
            <remote-alias>Total Coinsurance Days</remote-alias>
            <ordinal>36</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[CMS_SNF3_2017_2021_Final.csv_D7FF3BC054A74D188BA7505DFB8A0290]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Coinsurance Days Per Person With Coinsurance 1</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Coinsurance Days Per Person With Coinsurance 1]</local-name>
            <parent-name>[CMS_SNF3_2017_2021_Final.csv]</parent-name>
            <remote-alias>Coinsurance Days Per Person With Coinsurance 1</remote-alias>
            <ordinal>37</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[CMS_SNF3_2017_2021_Final.csv_D7FF3BC054A74D188BA7505DFB8A0290]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Coinsurance Payments</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total Coinsurance Payments]</local-name>
            <parent-name>[CMS_SNF3_2017_2021_Final.csv]</parent-name>
            <remote-alias>Total Coinsurance Payments</remote-alias>
            <ordinal>38</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[CMS_SNF3_2017_2021_Final.csv_D7FF3BC054A74D188BA7505DFB8A0290]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Coinsurance Payments Per Person With Coinsurance 1</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Coinsurance Payments Per Person With Coinsurance 1]</local-name>
            <parent-name>[CMS_SNF3_2017_2021_Final.csv]</parent-name>
            <remote-alias>Coinsurance Payments Per Person With Coinsurance 1</remote-alias>
            <ordinal>39</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[CMS_SNF3_2017_2021_Final.csv_D7FF3BC054A74D188BA7505DFB8A0290]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discharged Dead</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Discharged Dead]</local-name>
            <parent-name>[CMS_SNF3_2017_2021_Final.csv]</parent-name>
            <remote-alias>Discharged Dead</remote-alias>
            <ordinal>40</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[CMS_SNF3_2017_2021_Final.csv_D7FF3BC054A74D188BA7505DFB8A0290]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year (CMS_SNF3_2017_2021_Final.csv)]</local-name>
            <parent-name>[CMS_SNF3_2017_2021_Final.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>41</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[CMS_SNF3_2017_2021_Final.csv_D7FF3BC054A74D188BA7505DFB8A0290]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Persons With Coinsurance¹</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Persons With Coinsurance¹]</local-name>
            <parent-name>[CMS_SNF3_2017_2021_Final.csv]</parent-name>
            <remote-alias>Total Persons With Coinsurance¹</remote-alias>
            <ordinal>42</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[CMS_SNF3_2017_2021_Final.csv_D7FF3BC054A74D188BA7505DFB8A0290]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Coinsurance Days Per Person With Coinsurance¹</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Coinsurance Days Per Person With Coinsurance¹]</local-name>
            <parent-name>[CMS_SNF3_2017_2021_Final.csv]</parent-name>
            <remote-alias>Coinsurance Days Per Person With Coinsurance¹</remote-alias>
            <ordinal>43</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[CMS_SNF3_2017_2021_Final.csv_D7FF3BC054A74D188BA7505DFB8A0290]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Coinsurance Payments Per Person With Coinsurance¹</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Coinsurance Payments Per Person With Coinsurance¹]</local-name>
            <parent-name>[CMS_SNF3_2017_2021_Final.csv]</parent-name>
            <remote-alias>Coinsurance Payments Per Person With Coinsurance¹</remote-alias>
            <ordinal>44</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[CMS_SNF3_2017_2021_Final.csv_D7FF3BC054A74D188BA7505DFB8A0290]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State (KFF_Insurance_2017_2021_Final.csv)]</local-name>
            <parent-name>[KFF_Insurance_2017_2021_Final.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>45</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[KFF_Insurance_2017_2021_Final.csv_5ECA543DCD4F4902A1FFAF57100ADA93]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Employer</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Employer]</local-name>
            <parent-name>[KFF_Insurance_2017_2021_Final.csv]</parent-name>
            <remote-alias>Employer</remote-alias>
            <ordinal>46</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[KFF_Insurance_2017_2021_Final.csv_5ECA543DCD4F4902A1FFAF57100ADA93]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Non-Group</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Non-Group]</local-name>
            <parent-name>[KFF_Insurance_2017_2021_Final.csv]</parent-name>
            <remote-alias>Non-Group</remote-alias>
            <ordinal>47</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[KFF_Insurance_2017_2021_Final.csv_5ECA543DCD4F4902A1FFAF57100ADA93]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Medicaid</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Medicaid]</local-name>
            <parent-name>[KFF_Insurance_2017_2021_Final.csv]</parent-name>
            <remote-alias>Medicaid</remote-alias>
            <ordinal>48</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[KFF_Insurance_2017_2021_Final.csv_5ECA543DCD4F4902A1FFAF57100ADA93]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Medicare</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Medicare]</local-name>
            <parent-name>[KFF_Insurance_2017_2021_Final.csv]</parent-name>
            <remote-alias>Medicare</remote-alias>
            <ordinal>49</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[KFF_Insurance_2017_2021_Final.csv_5ECA543DCD4F4902A1FFAF57100ADA93]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Military</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Military]</local-name>
            <parent-name>[KFF_Insurance_2017_2021_Final.csv]</parent-name>
            <remote-alias>Military</remote-alias>
            <ordinal>50</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[KFF_Insurance_2017_2021_Final.csv_5ECA543DCD4F4902A1FFAF57100ADA93]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Uninsured</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Uninsured]</local-name>
            <parent-name>[KFF_Insurance_2017_2021_Final.csv]</parent-name>
            <remote-alias>Uninsured</remote-alias>
            <ordinal>51</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[KFF_Insurance_2017_2021_Final.csv_5ECA543DCD4F4902A1FFAF57100ADA93]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total]</local-name>
            <parent-name>[KFF_Insurance_2017_2021_Final.csv]</parent-name>
            <remote-alias>Total</remote-alias>
            <ordinal>52</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[KFF_Insurance_2017_2021_Final.csv_5ECA543DCD4F4902A1FFAF57100ADA93]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year (KFF_Insurance_2017_2021_Final.csv)]</local-name>
            <parent-name>[KFF_Insurance_2017_2021_Final.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>53</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[KFF_Insurance_2017_2021_Final.csv_5ECA543DCD4F4902A1FFAF57100ADA93]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Avg Charge Submitted' datatype='real' name='[Avg_Charge_Submitted]' role='measure' type='quantitative' />
      <column caption='Avg Medicare Payment' datatype='real' name='[Avg_Medicare_Payment]' role='measure' type='quantitative' />
      <column caption='Avg Total Payment' datatype='real' name='[Avg_Total_Payment]' role='measure' type='quantitative' />
      <column caption='Breakout Category' datatype='string' name='[Breakout_Category]' role='dimension' type='nominal' />
      <column caption='CI Lower' datatype='real' name='[CI_Lower]' role='measure' type='quantitative' />
      <column caption='CI Upper' datatype='real' name='[CI_Upper]' role='measure' type='quantitative' />
      <column caption='Uninsured Rate' datatype='real' name='[Calculation_1030761405185191936]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Uninsured]/[Total] )' />
      </column>
      <column aggregation='Avg' caption='Estimate Midpoint' datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Calculation_1030761405200850951]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([CI_Lower]+[CI_Upper]) / 2' />
      </column>
      <column caption='Keep Top N Chronic' datatype='boolean' name='[Calculation_1030761405205991434]' role='measure' type='nominal'>
        <calculation class='tableau' formula='[Calculation_1030761405487067153] &lt;= [Parameters].[Parameter 1]'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Health Risk(Chronic)' datatype='string' name='[Calculation_1030761405212323853]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='// CHRONIC CONDITIONS ONLY (case-insensitive, handles variants)&#13;&#10;// Returns a condition label when the response indicates presence; else NULL.&#13;&#10;&#13;&#10;IF CONTAINS(LOWER([Topic]), &quot;bmi&quot;) &#13;&#10;   AND CONTAINS(LOWER([Response]), &quot;obese&quot;)&#13;&#10;THEN &quot;Obesity&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS(LOWER([Topic]), &quot;high blood pressure&quot;)&#13;&#10;   AND LOWER([Response]) = &quot;yes&quot;&#13;&#10;THEN &quot;High Blood Pressure&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS(LOWER([Topic]), &quot;cholesterol&quot;)&#13;&#10;   AND LOWER([Response]) = &quot;yes&quot;&#13;&#10;THEN &quot;High Cholesterol&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS(LOWER([Topic]), &quot;diabetes&quot;)&#13;&#10;   AND LOWER([Response]) = &quot;yes&quot;&#13;&#10;   AND NOT CONTAINS(LOWER([Response]), &quot;pregnan&quot;)   // exclude gestational&#13;&#10;   AND NOT CONTAINS(LOWER([Response]), &quot;pre&quot;)       // exclude pre/ borderline&#13;&#10;THEN &quot;Diabetes&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS(LOWER([Topic]), &quot;depression&quot;)&#13;&#10;   AND LOWER([Response]) = &quot;yes&quot;&#13;&#10;THEN &quot;Depression&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS(LOWER([Topic]), &quot;asthma&quot;)&#13;&#10;   AND LOWER([Response]) = &quot;yes&quot;&#13;&#10;THEN &quot;Asthma&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS(LOWER([Topic]), &quot;copd&quot;)&#13;&#10;   AND LOWER([Response]) = &quot;yes&quot;&#13;&#10;THEN &quot;COPD&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS(LOWER([Topic]), &quot;cardiovascular&quot;)&#13;&#10;   AND (LOWER([Response]) = &quot;yes&quot; OR CONTAINS(LOWER([Response]), &quot;reported&quot;))&#13;&#10;THEN &quot;Cardiovascular Disease&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS(LOWER([Topic]), &quot;kidney&quot;)&#13;&#10;   AND LOWER([Response]) = &quot;yes&quot;&#13;&#10;THEN &quot;Kidney Disease&quot;&#13;&#10;&#13;&#10;// Order matters: match Skin Cancer before the generic &quot;cancer&quot;&#13;&#10;ELSEIF CONTAINS(LOWER([Topic]), &quot;skin cancer&quot;)&#13;&#10;   AND LOWER([Response]) = &quot;yes&quot;&#13;&#10;THEN &quot;Skin Cancer&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS(LOWER([Topic]), &quot;cancer&quot;)&#13;&#10;   AND LOWER([Response]) = &quot;yes&quot;&#13;&#10;THEN &quot;Cancer (Other)&quot;&#13;&#10;&#13;&#10;// Arthritis is very common in BRFSS; include if present in your file&#13;&#10;ELSEIF CONTAINS(LOWER([Topic]), &quot;arthritis&quot;)&#13;&#10;   AND LOWER([Response]) = &quot;yes&quot;&#13;&#10;THEN &quot;Arthritis&quot;&#13;&#10;END' />
      </column>
      <column caption='Rank by State(Chronic)' datatype='integer' name='[Calculation_1030761405212966926]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK_DENSE(AVG([Calculation_1030761405200850951]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Rank(Chronic)' datatype='integer' name='[Calculation_1030761405487067153]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK_DENSE(AVG([Calculation_1030761405200850951]), &apos;desc&apos;)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Keep Top N for State Chronic' datatype='boolean' name='[Calculation_1030761405506310170]' role='measure' type='nominal'>
        <calculation class='tableau' formula='[Calculation_1030761405212966926] &lt;= [Parameters].[Parameter 1]'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='DRG Code' datatype='integer' name='[DRG_Code]' role='dimension' type='ordinal' />
      <column caption='DRG Description' datatype='string' name='[DRG_Description]' role='dimension' type='nominal' />
      <column caption='Data Source' datatype='string' name='[Data_Source]' role='dimension' type='nominal' />
      <column caption='Medicare Rate ' datatype='real' name='[Medicaid Rate(%) (copy)_1030761405185748994]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Medicare]/[Total] )' />
      </column>
      <column caption='Employer Coverage Rate' datatype='real' name='[Medicare Rate(%)  (copy)_1030761405185937411]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Employer]/[Total] )' />
      </column>
      <column caption='Non-Group Coverage Rate' datatype='real' name='[Military Coverage Rate (copy)_1030761405192048645]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Non-Group]/[Total] )' />
      </column>
      <column caption='Sample Size' datatype='real' name='[Sample_Size]' role='measure' type='quantitative' />
      <column caption='State (CMS Inpatient 2017 2021 Final.csv)' datatype='string' name='[State (CMS_Inpatient_2017_2021_Final.csv)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='State (CMS SNF3 2017 2021 Final.csv)' datatype='string' name='[State (CMS_SNF3_2017_2021_Final.csv)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='State (KFF Insurance 2017 2021 Final.csv)' datatype='string' name='[State (KFF_Insurance_2017_2021_Final.csv)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Total Discharges' datatype='integer' name='[Total_Discharges]' role='measure' type='quantitative' />
      <column caption='Military Coverage Rate' datatype='real' name='[Uninsured Rate (copy)_1030761405191639044]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Military]/[Total] )' />
      </column>
      <column caption='Medicaid Rate' datatype='real' name='[Uninsured Rate(%) (copy)_1030761405185564673]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Medicaid]/[Total] )' />
      </column>
      <column caption='Year (CMS Inpatient 2017 2021 Final.csv)' datatype='integer' name='[Year (CMS_Inpatient_2017_2021_Final.csv)]' role='dimension' type='quantitative' />
      <column caption='Year (CMS SNF3 2017 2021 Final.csv)' datatype='integer' name='[Year (CMS_SNF3_2017_2021_Final.csv)]' role='dimension' type='quantitative' />
      <column caption='Year (KFF Insurance 2017 2021 Final.csv)' datatype='integer' name='[Year (KFF_Insurance_2017_2021_Final.csv)]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column caption='CDC_BRFSS_2017_2021_Final.csv' datatype='table' name='[__tableau_internal_object_id__].[CDC_BRFSS_2017_2021_Final.csv_936AA4FC498E47778ABFEACF320E8706]' role='measure' type='quantitative' />
      <column caption='CMS_Inpatient_2017_2021_Final.csv' datatype='table' name='[__tableau_internal_object_id__].[CMS_Inpatient_2017_2021_Final.csv_83E4B37B076A4ECCBB2A2A7646EFEAD2]' role='measure' type='quantitative' />
      <column caption='CMS_SNF3_2017_2021_Final.csv' datatype='table' name='[__tableau_internal_object_id__].[CMS_SNF3_2017_2021_Final.csv_D7FF3BC054A74D188BA7505DFB8A0290]' role='measure' type='quantitative' />
      <column caption='KFF_Insurance_2017_2021_Final.csv' datatype='table' name='[__tableau_internal_object_id__].[KFF_Insurance_2017_2021_Final.csv_5ECA543DCD4F4902A1FFAF57100ADA93]' role='measure' type='quantitative' />
      <group caption='Tooltip (State)' hidden='true' name='[Tooltip (State)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Top N' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='4'>
          <calculation class='tableau' formula='4' />
          <range granularity='1' max='20' min='1' />
        </column>
      </datasource-dependencies>
      <object-graph>
        <objects>
          <object caption='CDC_BRFSS_2017_2021_Final.csv' id='CDC_BRFSS_2017_2021_Final.csv_936AA4FC498E47778ABFEACF320E8706'>
            <properties context=''>
              <relation connection='textscan.175trke08a5f1z16xrdok0zs5hhh' name='CDC_BRFSS_2017_2021_Final.csv' table='[CDC_BRFSS_2017_2021_Final#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='integer' name='Year' ordinal='0' />
                  <column datatype='string' name='State' ordinal='1' />
                  <column datatype='string' name='Class' ordinal='2' />
                  <column datatype='string' name='Topic' ordinal='3' />
                  <column datatype='string' name='Question' ordinal='4' />
                  <column datatype='string' name='Response' ordinal='5' />
                  <column datatype='string' name='Breakout' ordinal='6' />
                  <column datatype='string' name='Breakout_Category' ordinal='7' />
                  <column datatype='real' name='Sample_Size' ordinal='8' />
                  <column datatype='real' name='CI_Lower' ordinal='9' />
                  <column datatype='real' name='CI_Upper' ordinal='10' />
                  <column datatype='string' name='Data_Source' ordinal='11' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='CMS_Inpatient_2017_2021_Final.csv' id='CMS_Inpatient_2017_2021_Final.csv_83E4B37B076A4ECCBB2A2A7646EFEAD2'>
            <properties context=''>
              <relation connection='textscan.175trke08a5f1z16xrdok0zs5hhh' name='CMS_Inpatient_2017_2021_Final.csv' table='[CMS_Inpatient_2017_2021_Final#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='State' ordinal='0' />
                  <column datatype='integer' name='DRG_Code' ordinal='1' />
                  <column datatype='string' name='DRG_Description' ordinal='2' />
                  <column datatype='integer' name='Total_Discharges' ordinal='3' />
                  <column datatype='real' name='Avg_Charge_Submitted' ordinal='4' />
                  <column datatype='real' name='Avg_Total_Payment' ordinal='5' />
                  <column datatype='real' name='Avg_Medicare_Payment' ordinal='6' />
                  <column datatype='integer' name='Year' ordinal='7' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='CMS_SNF3_2017_2021_Final.csv' id='CMS_SNF3_2017_2021_Final.csv_D7FF3BC054A74D188BA7505DFB8A0290'>
            <properties context=''>
              <relation connection='textscan.175trke08a5f1z16xrdok0zs5hhh' name='CMS_SNF3_2017_2021_Final.csv' table='[CMS_SNF3_2017_2021_Final#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='State' ordinal='0' />
                  <column datatype='integer' name='Total Original Medicare Part A Enrollees' ordinal='1' />
                  <column datatype='integer' name='Total Persons With Utilization' ordinal='2' />
                  <column datatype='integer' name='Total Covered Admissions' ordinal='3' />
                  <column datatype='real' name='Covered Admissions Per Person With Utilization' ordinal='4' />
                  <column datatype='real' name='Covered Admissions Per 1,000 Original Medicare Part A Enrollees' ordinal='5' />
                  <column datatype='integer' name='Total Covered Days of Care' ordinal='6' />
                  <column datatype='real' name='Covered Days of Care Per Covered Admission' ordinal='7' />
                  <column datatype='real' name='Covered Days of Care Per Person With Utilization' ordinal='8' />
                  <column datatype='integer' name='Covered Days of Care Per 1,000 Original Medicare Part A Enrollees' ordinal='9' />
                  <column datatype='integer' name='Total Program Payments' ordinal='10' />
                  <column datatype='integer' name='Program Payments Per Covered Admission' ordinal='11' />
                  <column datatype='integer' name='Program Payments Per Covered Day' ordinal='12' />
                  <column datatype='integer' name='Program Payments Per Person With Utilization' ordinal='13' />
                  <column datatype='integer' name='Program Payments Per Original Medicare Part A Enrollee' ordinal='14' />
                  <column datatype='real' name='Total Persons With Coinsurance 1' ordinal='15' />
                  <column datatype='integer' name='Total Coinsurance Days' ordinal='16' />
                  <column datatype='real' name='Coinsurance Days Per Person With Coinsurance 1' ordinal='17' />
                  <column datatype='integer' name='Total Coinsurance Payments' ordinal='18' />
                  <column datatype='real' name='Coinsurance Payments Per Person With Coinsurance 1' ordinal='19' />
                  <column datatype='integer' name='Discharged Dead' ordinal='20' />
                  <column datatype='integer' name='Year' ordinal='21' />
                  <column datatype='real' name='Total Persons With Coinsurance¹' ordinal='22' />
                  <column datatype='real' name='Coinsurance Days Per Person With Coinsurance¹' ordinal='23' />
                  <column datatype='real' name='Coinsurance Payments Per Person With Coinsurance¹' ordinal='24' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='KFF_Insurance_2017_2021_Final.csv' id='KFF_Insurance_2017_2021_Final.csv_5ECA543DCD4F4902A1FFAF57100ADA93'>
            <properties context=''>
              <relation connection='textscan.175trke08a5f1z16xrdok0zs5hhh' name='KFF_Insurance_2017_2021_Final.csv' table='[KFF_Insurance_2017_2021_Final#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='State' ordinal='0' />
                  <column datatype='real' name='Employer' ordinal='1' />
                  <column datatype='real' name='Non-Group' ordinal='2' />
                  <column datatype='real' name='Medicaid' ordinal='3' />
                  <column datatype='real' name='Medicare' ordinal='4' />
                  <column datatype='real' name='Military' ordinal='5' />
                  <column datatype='real' name='Uninsured' ordinal='6' />
                  <column datatype='real' name='Total' ordinal='7' />
                  <column datatype='integer' name='Year' ordinal='8' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[State]' />
                <expression op='[State (CMS_Inpatient_2017_2021_Final.csv)]' />
              </expression>
              <expression op='='>
                <expression op='[Year]' />
                <expression op='[Year (CMS_Inpatient_2017_2021_Final.csv)]' />
              </expression>
            </expression>
            <first-end-point object-id='CDC_BRFSS_2017_2021_Final.csv_936AA4FC498E47778ABFEACF320E8706' />
            <second-end-point object-id='CMS_Inpatient_2017_2021_Final.csv_83E4B37B076A4ECCBB2A2A7646EFEAD2' />
          </relationship>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[State (CMS_Inpatient_2017_2021_Final.csv)]' />
                <expression op='[State (CMS_SNF3_2017_2021_Final.csv)]' />
              </expression>
              <expression op='='>
                <expression op='[Year (CMS_Inpatient_2017_2021_Final.csv)]' />
                <expression op='[Year (CMS_SNF3_2017_2021_Final.csv)]' />
              </expression>
            </expression>
            <first-end-point object-id='CMS_Inpatient_2017_2021_Final.csv_83E4B37B076A4ECCBB2A2A7646EFEAD2' />
            <second-end-point object-id='CMS_SNF3_2017_2021_Final.csv_D7FF3BC054A74D188BA7505DFB8A0290' />
          </relationship>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[State (CMS_SNF3_2017_2021_Final.csv)]' />
                <expression op='[State (KFF_Insurance_2017_2021_Final.csv)]' />
              </expression>
              <expression op='='>
                <expression op='[Year (CMS_SNF3_2017_2021_Final.csv)]' />
                <expression op='[Year (KFF_Insurance_2017_2021_Final.csv)]' />
              </expression>
            </expression>
            <first-end-point object-id='CMS_SNF3_2017_2021_Final.csv_D7FF3BC054A74D188BA7505DFB8A0290' />
            <second-end-point object-id='KFF_Insurance_2017_2021_Final.csv_5ECA543DCD4F4902A1FFAF57100ADA93' />
          </relationship>
        </relationships>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Coverage Breakdown-Bar'>
      <table>
        <view>
          <datasources>
            <datasource caption='CDC_BRFSS_2017_2021_Final+' name='federated.1pi8yjg1rfn4wk10t96ef1d5rgyu' />
          </datasources>
          <datasource-dependencies datasource='federated.1pi8yjg1rfn4wk10t96ef1d5rgyu'>
            <column caption='Uninsured Rate' datatype='real' name='[Calculation_1030761405185191936]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Uninsured]/[Total] )' />
            </column>
            <column datatype='real' name='[Employer]' role='measure' type='quantitative' />
            <column caption='Medicare Rate ' datatype='real' name='[Medicaid Rate(%) (copy)_1030761405185748994]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Medicare]/[Total] )' />
            </column>
            <column datatype='real' name='[Medicaid]' role='measure' type='quantitative' />
            <column caption='Employer Coverage Rate' datatype='real' name='[Medicare Rate(%)  (copy)_1030761405185937411]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Employer]/[Total] )' />
            </column>
            <column datatype='real' name='[Medicare]' role='measure' type='quantitative' />
            <column caption='Non-Group Coverage Rate' datatype='real' name='[Military Coverage Rate (copy)_1030761405192048645]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Non-Group]/[Total] )' />
            </column>
            <column datatype='real' name='[Military]' role='measure' type='quantitative' />
            <column datatype='real' name='[Non-Group]' role='measure' type='quantitative' />
            <column caption='State (KFF Insurance 2017 2021 Final.csv)' datatype='string' name='[State (KFF_Insurance_2017_2021_Final.csv)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='real' name='[Total]' role='measure' type='quantitative' />
            <column caption='Military Coverage Rate' datatype='real' name='[Uninsured Rate (copy)_1030761405191639044]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Military]/[Total] )' />
            </column>
            <column caption='Medicaid Rate' datatype='real' name='[Uninsured Rate(%) (copy)_1030761405185564673]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Medicaid]/[Total] )' />
            </column>
            <column datatype='real' name='[Uninsured]' role='measure' type='quantitative' />
            <column caption='Year (KFF Insurance 2017 2021 Final.csv)' datatype='integer' name='[Year (KFF_Insurance_2017_2021_Final.csv)]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_1030761405185191936]' derivation='Avg' name='[avg:Calculation_1030761405185191936:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Medicaid Rate(%) (copy)_1030761405185748994]' derivation='Avg' name='[avg:Medicaid Rate(%) (copy)_1030761405185748994:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Medicare Rate(%)  (copy)_1030761405185937411]' derivation='Avg' name='[avg:Medicare Rate(%)  (copy)_1030761405185937411:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Military Coverage Rate (copy)_1030761405192048645]' derivation='Avg' name='[avg:Military Coverage Rate (copy)_1030761405192048645:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Uninsured Rate (copy)_1030761405191639044]' derivation='Avg' name='[avg:Uninsured Rate (copy)_1030761405191639044:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Uninsured Rate(%) (copy)_1030761405185564673]' derivation='Avg' name='[avg:Uninsured Rate(%) (copy)_1030761405185564673:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State (KFF_Insurance_2017_2021_Final.csv)]' derivation='None' name='[none:State (KFF_Insurance_2017_2021_Final.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[Year (KFF_Insurance_2017_2021_Final.csv)]' derivation='None' name='[none:Year (KFF_Insurance_2017_2021_Final.csv):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Military Coverage Rate (copy)_1030761405192048645]' derivation='Sum' name='[sum:Military Coverage Rate (copy)_1030761405192048645:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[avg:Medicare Rate(\%)  (copy)_1030761405185937411:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[avg:Uninsured Rate(\%) (copy)_1030761405185564673:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[avg:Medicaid Rate(\%) (copy)_1030761405185748994:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[avg:Calculation_1030761405185191936:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[avg:Uninsured Rate (copy)_1030761405191639044:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[avg:Military Coverage Rate (copy)_1030761405192048645:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[avg:Medicare Rate(\%)  (copy)_1030761405185937411:qk]&quot;</bucket>
              <bucket>&quot;[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[avg:Uninsured Rate(\%) (copy)_1030761405185564673:qk]&quot;</bucket>
              <bucket>&quot;[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[avg:Medicaid Rate(\%) (copy)_1030761405185748994:qk]&quot;</bucket>
              <bucket>&quot;[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[avg:Calculation_1030761405185191936:qk]&quot;</bucket>
              <bucket>&quot;[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[avg:Military Coverage Rate (copy)_1030761405192048645:qk]&quot;</bucket>
              <bucket>&quot;[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[avg:Uninsured Rate (copy)_1030761405191639044:qk]&quot;</bucket>
              <bucket>&quot;[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[sum:Military Coverage Rate (copy)_1030761405192048645:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[none:State (KFF_Insurance_2017_2021_Final.csv):nk]'>
            <groupfilter function='member' level='[none:State (KFF_Insurance_2017_2021_Final.csv):nk]' member='&quot;Kansas&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[none:Year (KFF_Insurance_2017_2021_Final.csv):ok]'>
            <groupfilter function='level-members' level='[none:Year (KFF_Insurance_2017_2021_Final.csv):ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[none:State (KFF_Insurance_2017_2021_Final.csv):nk]</column>
            <column>[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[none:Year (KFF_Insurance_2017_2021_Final.csv):ok]</column>
            <column>[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[Multiple Values]' value='p0.0%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[Multiple Values]' value='' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[Multiple Values]' />
              <lod column='[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[Multiple Values]</rows>
        <cols>[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{3E897AF6-75B9-4757-9436-AB2A0A728CAC}' />
    </worksheet>
    <worksheet name='Health Risk by State'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CDC_BRFSS_2017_2021_Final+' name='federated.1pi8yjg1rfn4wk10t96ef1d5rgyu' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1pi8yjg1rfn4wk10t96ef1d5rgyu'>
            <column caption='CI Lower' datatype='real' name='[CI_Lower]' role='measure' type='quantitative' />
            <column caption='CI Upper' datatype='real' name='[CI_Upper]' role='measure' type='quantitative' />
            <column aggregation='Avg' caption='Estimate Midpoint' datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Calculation_1030761405200850951]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([CI_Lower]+[CI_Upper]) / 2' />
            </column>
            <column caption='Health Risk(Chronic)' datatype='string' name='[Calculation_1030761405212323853]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='// CHRONIC CONDITIONS ONLY (case-insensitive, handles variants)&#13;&#10;// Returns a condition label when the response indicates presence; else NULL.&#13;&#10;&#13;&#10;IF CONTAINS(LOWER([Topic]), &quot;bmi&quot;) &#13;&#10;   AND CONTAINS(LOWER([Response]), &quot;obese&quot;)&#13;&#10;THEN &quot;Obesity&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS(LOWER([Topic]), &quot;high blood pressure&quot;)&#13;&#10;   AND LOWER([Response]) = &quot;yes&quot;&#13;&#10;THEN &quot;High Blood Pressure&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS(LOWER([Topic]), &quot;cholesterol&quot;)&#13;&#10;   AND LOWER([Response]) = &quot;yes&quot;&#13;&#10;THEN &quot;High Cholesterol&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS(LOWER([Topic]), &quot;diabetes&quot;)&#13;&#10;   AND LOWER([Response]) = &quot;yes&quot;&#13;&#10;   AND NOT CONTAINS(LOWER([Response]), &quot;pregnan&quot;)   // exclude gestational&#13;&#10;   AND NOT CONTAINS(LOWER([Response]), &quot;pre&quot;)       // exclude pre/ borderline&#13;&#10;THEN &quot;Diabetes&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS(LOWER([Topic]), &quot;depression&quot;)&#13;&#10;   AND LOWER([Response]) = &quot;yes&quot;&#13;&#10;THEN &quot;Depression&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS(LOWER([Topic]), &quot;asthma&quot;)&#13;&#10;   AND LOWER([Response]) = &quot;yes&quot;&#13;&#10;THEN &quot;Asthma&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS(LOWER([Topic]), &quot;copd&quot;)&#13;&#10;   AND LOWER([Response]) = &quot;yes&quot;&#13;&#10;THEN &quot;COPD&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS(LOWER([Topic]), &quot;cardiovascular&quot;)&#13;&#10;   AND (LOWER([Response]) = &quot;yes&quot; OR CONTAINS(LOWER([Response]), &quot;reported&quot;))&#13;&#10;THEN &quot;Cardiovascular Disease&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS(LOWER([Topic]), &quot;kidney&quot;)&#13;&#10;   AND LOWER([Response]) = &quot;yes&quot;&#13;&#10;THEN &quot;Kidney Disease&quot;&#13;&#10;&#13;&#10;// Order matters: match Skin Cancer before the generic &quot;cancer&quot;&#13;&#10;ELSEIF CONTAINS(LOWER([Topic]), &quot;skin cancer&quot;)&#13;&#10;   AND LOWER([Response]) = &quot;yes&quot;&#13;&#10;THEN &quot;Skin Cancer&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS(LOWER([Topic]), &quot;cancer&quot;)&#13;&#10;   AND LOWER([Response]) = &quot;yes&quot;&#13;&#10;THEN &quot;Cancer (Other)&quot;&#13;&#10;&#13;&#10;// Arthritis is very common in BRFSS; include if present in your file&#13;&#10;ELSEIF CONTAINS(LOWER([Topic]), &quot;arthritis&quot;)&#13;&#10;   AND LOWER([Response]) = &quot;yes&quot;&#13;&#10;THEN &quot;Arthritis&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Response]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Topic]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_1030761405200850951]' derivation='Avg' name='[avg:Calculation_1030761405200850951:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1030761405212323853]' derivation='None' name='[none:Calculation_1030761405212323853:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[none:Calculation_1030761405212323853:nk]'>
            <groupfilter function='member' level='[none:Calculation_1030761405212323853:nk]' member='&quot;Asthma&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[none:Year:ok]'>
            <groupfilter function='member' level='[none:Year:ok]' member='2017' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[none:Calculation_1030761405212323853:nk]</column>
            <column>[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[none:Year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[Longitude (generated)]' field-type='quantitative' max='32187567.56585348' min='20940083.690202884' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[Latitude (generated)]' field-type='quantitative' max='14267405.15685921' min='1618421.1782435579' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[avg:Calculation_1030761405200850951:qk]' value='n#,##0.0&quot;%&quot;;-#,##0.0&quot;%&quot;' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[avg:Calculation_1030761405200850951:qk]' palette='orange_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[avg:Calculation_1030761405200850951:qk]' />
              <lod column='[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[none:State:nk]' />
              <lod column='[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[none:Year:qk]' />
              <lod column='[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[none:Calculation_1030761405212323853:nk]' />
              <geometry column='[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[none:Calculation_1030761405212323853:nk]</run>
                <run>&gt; prevalence in &lt;</run>
                <run>[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[none:State:nk]</run>
                <run>&gt; (&lt;</run>
                <run>[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[none:Year:qk]</run>
                <run>&gt;):&#10;&lt;</run>
                <run>[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[avg:Calculation_1030761405200850951:qk]</run>
                <run>&gt;%&#10;&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[Latitude (generated)]</rows>
        <cols>[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{DB9C647F-DFA7-4B46-8C8F-69768341B71A}' />
    </worksheet>
    <worksheet name='Obesity Rate-BRFSS'>
      <table>
        <view>
          <datasources>
            <datasource caption='CDC_BRFSS_2017_2021_Final+' name='federated.1pi8yjg1rfn4wk10t96ef1d5rgyu' />
          </datasources>
          <datasource-dependencies datasource='federated.1pi8yjg1rfn4wk10t96ef1d5rgyu'>
            <column datatype='string' name='[Response]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Topic]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Response]' derivation='None' name='[none:Response:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Topic]' derivation='None' name='[none:Topic:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[none:Response:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Response:nk]' member='&quot;Obese (bmi 30.0 - 99.8)&quot;' />
              <groupfilter function='member' level='[none:Response:nk]' member='&quot;Obese (BMI 30.0 - 99.8)&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[none:Topic:nk]'>
            <groupfilter function='member' level='[none:Topic:nk]' member='&quot;BMI Categories&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[none:Year:ok]'>
            <groupfilter function='member' level='[none:Year:ok]' member='2017' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[none:Year:ok]</column>
            <column>[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[none:Topic:nk]</column>
            <column>[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[none:Response:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#f9a655' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[none:State:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{EA5E2B89-1882-4832-9DAD-859C0D05DD4F}' />
    </worksheet>
    <worksheet name='Sheet 9'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{A46EC763-DE58-40DF-8E33-E49AADFE140C}' />
    </worksheet>
    <worksheet name='Test Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='CDC_BRFSS_2017_2021_Final+' name='federated.1pi8yjg1rfn4wk10t96ef1d5rgyu' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1pi8yjg1rfn4wk10t96ef1d5rgyu'>
            <column caption='Uninsured Rate' datatype='real' name='[Calculation_1030761405185191936]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Uninsured]/[Total] )' />
            </column>
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='real' name='[Total]' role='measure' type='quantitative' />
            <column datatype='real' name='[Uninsured]' role='measure' type='quantitative' />
            <column caption='Year (KFF Insurance 2017 2021 Final.csv)' datatype='integer' name='[Year (KFF_Insurance_2017_2021_Final.csv)]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_1030761405185191936]' derivation='Avg' name='[avg:Calculation_1030761405185191936:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year (KFF_Insurance_2017_2021_Final.csv)]' derivation='None' name='[none:Year (KFF_Insurance_2017_2021_Final.csv):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[none:Year (KFF_Insurance_2017_2021_Final.csv):ok]'>
            <groupfilter function='member' level='[none:Year (KFF_Insurance_2017_2021_Final.csv):ok]' member='2020' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[none:Year (KFF_Insurance_2017_2021_Final.csv):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[avg:Calculation_1030761405185191936:qk]' />
              <lod column='[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[none:State:nk]' />
              <geometry column='[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[Latitude (generated)]</rows>
        <cols>[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{B2C3BB85-E102-44C7-B87A-BE22D5DD25ED}' />
    </worksheet>
    <worksheet name='Top Chronic Conditions - USA'>
      <table>
        <view>
          <datasources>
            <datasource caption='CDC_BRFSS_2017_2021_Final+' name='federated.1pi8yjg1rfn4wk10t96ef1d5rgyu' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top N' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='4'>
              <calculation class='tableau' formula='4' />
              <range granularity='1' max='20' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1pi8yjg1rfn4wk10t96ef1d5rgyu'>
            <column caption='CI Lower' datatype='real' name='[CI_Lower]' role='measure' type='quantitative' />
            <column caption='CI Upper' datatype='real' name='[CI_Upper]' role='measure' type='quantitative' />
            <column aggregation='Avg' caption='Estimate Midpoint' datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Calculation_1030761405200850951]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([CI_Lower]+[CI_Upper]) / 2' />
            </column>
            <column caption='Keep Top N Chronic' datatype='boolean' name='[Calculation_1030761405205991434]' role='measure' type='nominal'>
              <calculation class='tableau' formula='[Calculation_1030761405487067153] &lt;= [Parameters].[Parameter 1]'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Health Risk(Chronic)' datatype='string' name='[Calculation_1030761405212323853]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='// CHRONIC CONDITIONS ONLY (case-insensitive, handles variants)&#13;&#10;// Returns a condition label when the response indicates presence; else NULL.&#13;&#10;&#13;&#10;IF CONTAINS(LOWER([Topic]), &quot;bmi&quot;) &#13;&#10;   AND CONTAINS(LOWER([Response]), &quot;obese&quot;)&#13;&#10;THEN &quot;Obesity&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS(LOWER([Topic]), &quot;high blood pressure&quot;)&#13;&#10;   AND LOWER([Response]) = &quot;yes&quot;&#13;&#10;THEN &quot;High Blood Pressure&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS(LOWER([Topic]), &quot;cholesterol&quot;)&#13;&#10;   AND LOWER([Response]) = &quot;yes&quot;&#13;&#10;THEN &quot;High Cholesterol&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS(LOWER([Topic]), &quot;diabetes&quot;)&#13;&#10;   AND LOWER([Response]) = &quot;yes&quot;&#13;&#10;   AND NOT CONTAINS(LOWER([Response]), &quot;pregnan&quot;)   // exclude gestational&#13;&#10;   AND NOT CONTAINS(LOWER([Response]), &quot;pre&quot;)       // exclude pre/ borderline&#13;&#10;THEN &quot;Diabetes&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS(LOWER([Topic]), &quot;depression&quot;)&#13;&#10;   AND LOWER([Response]) = &quot;yes&quot;&#13;&#10;THEN &quot;Depression&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS(LOWER([Topic]), &quot;asthma&quot;)&#13;&#10;   AND LOWER([Response]) = &quot;yes&quot;&#13;&#10;THEN &quot;Asthma&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS(LOWER([Topic]), &quot;copd&quot;)&#13;&#10;   AND LOWER([Response]) = &quot;yes&quot;&#13;&#10;THEN &quot;COPD&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS(LOWER([Topic]), &quot;cardiovascular&quot;)&#13;&#10;   AND (LOWER([Response]) = &quot;yes&quot; OR CONTAINS(LOWER([Response]), &quot;reported&quot;))&#13;&#10;THEN &quot;Cardiovascular Disease&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS(LOWER([Topic]), &quot;kidney&quot;)&#13;&#10;   AND LOWER([Response]) = &quot;yes&quot;&#13;&#10;THEN &quot;Kidney Disease&quot;&#13;&#10;&#13;&#10;// Order matters: match Skin Cancer before the generic &quot;cancer&quot;&#13;&#10;ELSEIF CONTAINS(LOWER([Topic]), &quot;skin cancer&quot;)&#13;&#10;   AND LOWER([Response]) = &quot;yes&quot;&#13;&#10;THEN &quot;Skin Cancer&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS(LOWER([Topic]), &quot;cancer&quot;)&#13;&#10;   AND LOWER([Response]) = &quot;yes&quot;&#13;&#10;THEN &quot;Cancer (Other)&quot;&#13;&#10;&#13;&#10;// Arthritis is very common in BRFSS; include if present in your file&#13;&#10;ELSEIF CONTAINS(LOWER([Topic]), &quot;arthritis&quot;)&#13;&#10;   AND LOWER([Response]) = &quot;yes&quot;&#13;&#10;THEN &quot;Arthritis&quot;&#13;&#10;END' />
            </column>
            <column caption='Rank(Chronic)' datatype='integer' name='[Calculation_1030761405487067153]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RANK_DENSE(AVG([Calculation_1030761405200850951]), &apos;desc&apos;)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Response]' role='dimension' type='nominal' />
            <column datatype='string' name='[Topic]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_1030761405200850951]' derivation='Avg' name='[avg:Calculation_1030761405200850951:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1030761405212323853]' derivation='None' name='[none:Calculation_1030761405212323853:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1030761405205991434]' derivation='User' name='[usr:Calculation_1030761405205991434:nk:8]' pivot='key' type='nominal'>
              <table-calc ordering-type='Columns' />
              <table-calc field='[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[Calculation_1030761405487067153]' ordering-field='[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[none:Calculation_1030761405212323853:nk]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[none:Calculation_1030761405212323853:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_1030761405212323853:nk]' member='&quot;Arthritis&quot;' />
              <groupfilter function='member' level='[none:Calculation_1030761405212323853:nk]' member='&quot;Asthma&quot;' />
              <groupfilter function='member' level='[none:Calculation_1030761405212323853:nk]' member='&quot;COPD&quot;' />
              <groupfilter function='member' level='[none:Calculation_1030761405212323853:nk]' member='&quot;Cancer (Other)&quot;' />
              <groupfilter function='member' level='[none:Calculation_1030761405212323853:nk]' member='&quot;Cardiovascular Disease&quot;' />
              <groupfilter function='member' level='[none:Calculation_1030761405212323853:nk]' member='&quot;Depression&quot;' />
              <groupfilter function='member' level='[none:Calculation_1030761405212323853:nk]' member='&quot;Diabetes&quot;' />
              <groupfilter function='member' level='[none:Calculation_1030761405212323853:nk]' member='&quot;High Blood Pressure&quot;' />
              <groupfilter function='member' level='[none:Calculation_1030761405212323853:nk]' member='&quot;High Cholesterol&quot;' />
              <groupfilter function='member' level='[none:Calculation_1030761405212323853:nk]' member='&quot;Kidney Disease&quot;' />
              <groupfilter function='member' level='[none:Calculation_1030761405212323853:nk]' member='&quot;Obesity&quot;' />
              <groupfilter function='member' level='[none:Calculation_1030761405212323853:nk]' member='&quot;Skin Cancer&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[none:Year:ok]'>
            <groupfilter function='member' level='[none:Year:ok]' member='2017' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[usr:Calculation_1030761405205991434:nk:8]'>
            <groupfilter function='member' level='[usr:Calculation_1030761405205991434:nk:8]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[none:Calculation_1030761405212323853:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[avg:Calculation_1030761405200850951:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[none:Year:ok]</column>
            <column>[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[none:Calculation_1030761405212323853:nk]</column>
            <column>[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[usr:Calculation_1030761405205991434:nk:8]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[avg:Calculation_1030761405200850951:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[avg:Calculation_1030761405200850951:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[none:Calculation_1030761405212323853:nk]</rows>
        <cols>[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[avg:Calculation_1030761405200850951:qk]</cols>
      </table>
      <simple-id uuid='{53FF04E5-AC5B-4934-A691-0449CF00CF40}' />
    </worksheet>
    <worksheet name='Top Chronic Conditions-State'>
      <table>
        <view>
          <datasources>
            <datasource caption='CDC_BRFSS_2017_2021_Final+' name='federated.1pi8yjg1rfn4wk10t96ef1d5rgyu' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1pi8yjg1rfn4wk10t96ef1d5rgyu'>
            <column caption='CI Lower' datatype='real' name='[CI_Lower]' role='measure' type='quantitative' />
            <column caption='CI Upper' datatype='real' name='[CI_Upper]' role='measure' type='quantitative' />
            <column aggregation='Avg' caption='Estimate Midpoint' datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Calculation_1030761405200850951]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([CI_Lower]+[CI_Upper]) / 2' />
            </column>
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_1030761405200850951]' derivation='Avg' name='[avg:Calculation_1030761405200850951:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[none:Year:ok]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[none:Year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[avg:Calculation_1030761405200850951:qk]' value='n#,##0.0&quot;%&quot;;-#,##0.0&quot;%&quot;' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[avg:Calculation_1030761405200850951:qk]' />
              <lod column='[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[none:State:nk]' />
              <geometry column='[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true'><![CDATA[Top <[Parameters].[Parameter 1]> Chronic Conditions in <[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[none:State:nk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true'><![CDATA[<Sheet name="Top N Chronic List (Tooltip)" maxwidth="300" maxheight="300" filter="<All Fields>">]]></run>
                <run>Æ&#10;&#10;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[Latitude (generated)]</rows>
        <cols>[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{8A33AB08-9A72-4CCB-B7C3-5407A96E476E}' />
    </worksheet>
    <worksheet name='Top N Chronic List (Tooltip)'>
      <table>
        <view>
          <datasources>
            <datasource caption='CDC_BRFSS_2017_2021_Final+' name='federated.1pi8yjg1rfn4wk10t96ef1d5rgyu' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top N' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='4'>
              <calculation class='tableau' formula='4' />
              <range granularity='1' max='20' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1pi8yjg1rfn4wk10t96ef1d5rgyu'>
            <column caption='CI Lower' datatype='real' name='[CI_Lower]' role='measure' type='quantitative' />
            <column caption='CI Upper' datatype='real' name='[CI_Upper]' role='measure' type='quantitative' />
            <column aggregation='Avg' caption='Estimate Midpoint' datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Calculation_1030761405200850951]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([CI_Lower]+[CI_Upper]) / 2' />
            </column>
            <column caption='Health Risk(Chronic)' datatype='string' name='[Calculation_1030761405212323853]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='// CHRONIC CONDITIONS ONLY (case-insensitive, handles variants)&#13;&#10;// Returns a condition label when the response indicates presence; else NULL.&#13;&#10;&#13;&#10;IF CONTAINS(LOWER([Topic]), &quot;bmi&quot;) &#13;&#10;   AND CONTAINS(LOWER([Response]), &quot;obese&quot;)&#13;&#10;THEN &quot;Obesity&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS(LOWER([Topic]), &quot;high blood pressure&quot;)&#13;&#10;   AND LOWER([Response]) = &quot;yes&quot;&#13;&#10;THEN &quot;High Blood Pressure&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS(LOWER([Topic]), &quot;cholesterol&quot;)&#13;&#10;   AND LOWER([Response]) = &quot;yes&quot;&#13;&#10;THEN &quot;High Cholesterol&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS(LOWER([Topic]), &quot;diabetes&quot;)&#13;&#10;   AND LOWER([Response]) = &quot;yes&quot;&#13;&#10;   AND NOT CONTAINS(LOWER([Response]), &quot;pregnan&quot;)   // exclude gestational&#13;&#10;   AND NOT CONTAINS(LOWER([Response]), &quot;pre&quot;)       // exclude pre/ borderline&#13;&#10;THEN &quot;Diabetes&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS(LOWER([Topic]), &quot;depression&quot;)&#13;&#10;   AND LOWER([Response]) = &quot;yes&quot;&#13;&#10;THEN &quot;Depression&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS(LOWER([Topic]), &quot;asthma&quot;)&#13;&#10;   AND LOWER([Response]) = &quot;yes&quot;&#13;&#10;THEN &quot;Asthma&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS(LOWER([Topic]), &quot;copd&quot;)&#13;&#10;   AND LOWER([Response]) = &quot;yes&quot;&#13;&#10;THEN &quot;COPD&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS(LOWER([Topic]), &quot;cardiovascular&quot;)&#13;&#10;   AND (LOWER([Response]) = &quot;yes&quot; OR CONTAINS(LOWER([Response]), &quot;reported&quot;))&#13;&#10;THEN &quot;Cardiovascular Disease&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS(LOWER([Topic]), &quot;kidney&quot;)&#13;&#10;   AND LOWER([Response]) = &quot;yes&quot;&#13;&#10;THEN &quot;Kidney Disease&quot;&#13;&#10;&#13;&#10;// Order matters: match Skin Cancer before the generic &quot;cancer&quot;&#13;&#10;ELSEIF CONTAINS(LOWER([Topic]), &quot;skin cancer&quot;)&#13;&#10;   AND LOWER([Response]) = &quot;yes&quot;&#13;&#10;THEN &quot;Skin Cancer&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS(LOWER([Topic]), &quot;cancer&quot;)&#13;&#10;   AND LOWER([Response]) = &quot;yes&quot;&#13;&#10;THEN &quot;Cancer (Other)&quot;&#13;&#10;&#13;&#10;// Arthritis is very common in BRFSS; include if present in your file&#13;&#10;ELSEIF CONTAINS(LOWER([Topic]), &quot;arthritis&quot;)&#13;&#10;   AND LOWER([Response]) = &quot;yes&quot;&#13;&#10;THEN &quot;Arthritis&quot;&#13;&#10;END' />
            </column>
            <column caption='Rank by State(Chronic)' datatype='integer' name='[Calculation_1030761405212966926]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RANK_DENSE(AVG([Calculation_1030761405200850951]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Keep Top N for State Chronic' datatype='boolean' name='[Calculation_1030761405506310170]' role='measure' type='nominal'>
              <calculation class='tableau' formula='[Calculation_1030761405212966926] &lt;= [Parameters].[Parameter 1]'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Response]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Topic]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_1030761405200850951]' derivation='Avg' name='[avg:Calculation_1030761405200850951:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1030761405212323853]' derivation='None' name='[none:Calculation_1030761405212323853:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1030761405506310170]' derivation='User' name='[usr:Calculation_1030761405506310170:nk:3]' pivot='key' type='nominal'>
              <table-calc ordering-type='Columns' />
              <table-calc field='[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[Calculation_1030761405212966926]' ordering-field='[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[none:Calculation_1030761405212323853:nk]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[none:Calculation_1030761405212323853:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_1030761405212323853:nk]' member='&quot;Arthritis&quot;' />
              <groupfilter function='member' level='[none:Calculation_1030761405212323853:nk]' member='&quot;Asthma&quot;' />
              <groupfilter function='member' level='[none:Calculation_1030761405212323853:nk]' member='&quot;COPD&quot;' />
              <groupfilter function='member' level='[none:Calculation_1030761405212323853:nk]' member='&quot;Cancer (Other)&quot;' />
              <groupfilter function='member' level='[none:Calculation_1030761405212323853:nk]' member='&quot;Cardiovascular Disease&quot;' />
              <groupfilter function='member' level='[none:Calculation_1030761405212323853:nk]' member='&quot;Depression&quot;' />
              <groupfilter function='member' level='[none:Calculation_1030761405212323853:nk]' member='&quot;Diabetes&quot;' />
              <groupfilter function='member' level='[none:Calculation_1030761405212323853:nk]' member='&quot;High Blood Pressure&quot;' />
              <groupfilter function='member' level='[none:Calculation_1030761405212323853:nk]' member='&quot;High Cholesterol&quot;' />
              <groupfilter function='member' level='[none:Calculation_1030761405212323853:nk]' member='&quot;Kidney Disease&quot;' />
              <groupfilter function='member' level='[none:Calculation_1030761405212323853:nk]' member='&quot;Obesity&quot;' />
              <groupfilter function='member' level='[none:Calculation_1030761405212323853:nk]' member='&quot;Skin Cancer&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[none:State:nk]'>
            <groupfilter function='level-members' level='[none:State:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[none:Year:ok]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[usr:Calculation_1030761405506310170:nk:3]'>
            <groupfilter function='member' level='[usr:Calculation_1030761405506310170:nk:3]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[none:Calculation_1030761405212323853:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[avg:Calculation_1030761405200850951:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[none:State:nk]</column>
            <column>[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[usr:Calculation_1030761405506310170:nk:3]</column>
            <column>[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[none:Calculation_1030761405212323853:nk]</column>
            <column>[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[none:Year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[avg:Calculation_1030761405200850951:qk]' value='n#,##0.0&quot;%&quot;;-#,##0.0&quot;%&quot;' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[avg:Calculation_1030761405200850951:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[none:Calculation_1030761405212323853:nk]</rows>
        <cols>[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[avg:Calculation_1030761405200850951:qk]</cols>
      </table>
      <simple-id uuid='{AEA979DA-E001-43B2-96E5-5FD1E816D1A1}' />
    </worksheet>
    <worksheet name='Uninsured Rate-Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='CDC_BRFSS_2017_2021_Final+' name='federated.1pi8yjg1rfn4wk10t96ef1d5rgyu' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1pi8yjg1rfn4wk10t96ef1d5rgyu'>
            <column caption='Uninsured Rate' datatype='real' name='[Calculation_1030761405185191936]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Uninsured]/[Total] )' />
            </column>
            <column caption='State (KFF Insurance 2017 2021 Final.csv)' datatype='string' name='[State (KFF_Insurance_2017_2021_Final.csv)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='real' name='[Total]' role='measure' type='quantitative' />
            <column datatype='real' name='[Uninsured]' role='measure' type='quantitative' />
            <column caption='Year (KFF Insurance 2017 2021 Final.csv)' datatype='integer' name='[Year (KFF_Insurance_2017_2021_Final.csv)]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_1030761405185191936]' derivation='Avg' name='[avg:Calculation_1030761405185191936:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State (KFF_Insurance_2017_2021_Final.csv)]' derivation='None' name='[none:State (KFF_Insurance_2017_2021_Final.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[Year (KFF_Insurance_2017_2021_Final.csv)]' derivation='None' name='[none:Year (KFF_Insurance_2017_2021_Final.csv):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[none:Year (KFF_Insurance_2017_2021_Final.csv):ok]'>
            <groupfilter function='member' level='[none:Year (KFF_Insurance_2017_2021_Final.csv):ok]' member='2017' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[none:Year (KFF_Insurance_2017_2021_Final.csv):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[avg:Calculation_1030761405185191936:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[avg:Calculation_1030761405185191936:qk]' />
              <text column='[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[avg:Calculation_1030761405185191936:qk]' />
              <lod column='[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[none:State (KFF_Insurance_2017_2021_Final.csv):nk]' />
              <geometry column='[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[Latitude (generated)]</rows>
        <cols>[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{58DE9843-B8ED-4D4F-99A8-70E9D6444464}' />
    </worksheet>
  </worksheets>
  <windows source-height='37'>
    <window class='worksheet' name='Test Map'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card param='[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[none:Year (KFF_Insurance_2017_2021_Final.csv):ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[avg:Calculation_1030761405185191936:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[none:Year (KFF_Insurance_2017_2021_Final.csv):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{073A73C2-2390-47F1-841E-5D39B257846D}' />
    </window>
    <window class='worksheet' maximized='true' name='Coverage Breakdown-Bar'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='38'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card param='[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[none:Year (KFF_Insurance_2017_2021_Final.csv):ok]' type='filter' />
            <card param='[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[none:State (KFF_Insurance_2017_2021_Final.csv):nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[:Measure Names]</field>
            <field>[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[none:State (KFF_Insurance_2017_2021_Final.csv):nk]</field>
            <field>[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[none:Year (KFF_Insurance_2017_2021_Final.csv):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{92705DA3-0F0B-49F4-B3C6-6144FAC2DA24}' />
    </window>
    <window class='worksheet' name='Uninsured Rate-Map'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='125'>
            <card mode='dropdown' param='[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[none:Year (KFF_Insurance_2017_2021_Final.csv):ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[avg:Calculation_1030761405185191936:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[avg:Calculation_1030761405185191936:qk]</field>
            <field>[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[none:Year (KFF_Insurance_2017_2021_Final.csv):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{73945067-7ABF-4560-A0E0-5D08CC247ABA}' />
    </window>
    <window class='worksheet' name='Obesity Rate-BRFSS'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card mode='dropdown' param='[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[none:Year:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[none:Response:nk]</field>
            <field>[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[none:State:nk]</field>
            <field>[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[none:Topic:nk]</field>
            <field>[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D231230F-8E10-4FC0-BB1E-B45DC5146C1C}' />
    </window>
    <window class='worksheet' name='Top Chronic Conditions - USA'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='38'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card param='[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[none:Calculation_1030761405212323853:nk]' type='filter' />
            <card mode='dropdown' param='[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[none:Year:ok]' type='filter' />
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[none:Calculation_1030761405203464200:nk]</field>
            <field>[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[none:Calculation_1030761405212323853:nk]</field>
            <field>[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[none:Response:nk]</field>
            <field>[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[none:Topic:nk]</field>
            <field>[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[none:Year:qk]</field>
            <field>[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[usr:Calculation_1030761405205991434:nk:1]</field>
            <field>[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[usr:Calculation_1030761405205991434:nk:6]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D2D2AF9E-8E62-495C-9324-AEC6D8886B26}' />
    </window>
    <window class='worksheet' name='Top Chronic Conditions-State'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[none:Year:ok]' type='filter' />
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='0' param='[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[avg:Calculation_1030761405200850951:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[none:Calculation_1030761405212323853:nk]</field>
            <field>[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[none:State:nk]</field>
            <field>[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0D18139D-CEC2-457B-A90E-0AF4F4140284}' />
    </window>
    <window class='worksheet' name='Top N Chronic List (Tooltip)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[none:State:nk]' type='filter' />
            <card param='[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[usr:Calculation_1030761405506310170:nk:3]' show-morefewerbutton='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[none:Calculation_1030761405212323853:nk]</field>
            <field>[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[none:State:nk]</field>
            <field>[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[none:Year:qk]</field>
            <field>[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[usr:Calculation_1030761405506310170:nk:1]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D43BBDA3-ECC5-4E93-9542-82AA9A6A654B}' />
    </window>
    <window class='worksheet' name='Health Risk by State'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[none:Year:ok]' type='filter' />
            <card mode='dropdown' param='[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[none:Calculation_1030761405212323853:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[avg:Calculation_1030761405200850951:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[none:Calculation_1030761405212323853:nk]</field>
            <field>[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[none:Data_Source:nk]</field>
            <field>[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[none:State:nk]</field>
            <field>[federated.1pi8yjg1rfn4wk10t96ef1d5rgyu].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{453392E5-FA38-4698-984F-1FF26DC49D15}' />
    </window>
    <window class='worksheet' name='Sheet 9'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{9F1A6B2B-A037-4D97-BCC6-DA83877A8C79}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Coverage Breakdown-Bar' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Health Risk by State' width='192'>
      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
      teuFYRhQqYYOWxLZT48CgOriAq5/5R9jZ344VUh06zU9jh/hOTz3iV/ExOQUGo06Xvqz38fh
      8E18/cYkPvcrfx87du3uycBcCUhiX75wFhe//q/wzJY2LgVbUXr/30MuX4DbauHiX/0bPJK/
      izfb+/Dk5/9Bj8tUvK5IqPLSK86TiF72wIjPodlsxkayLNlVbtRarYaxsTFcv349ZrRcLod7
      9+4hn88jCAKUy2XcunULDz/8cGIDin7vsdVqJXzqKg+TaoxsNot8Pj/wHWwUXNdN5C+pVD7x
      O6D7HLds2TJ8SWTawyBcPXccExm1p0BkvDCiz5Yjpuf5Phx7/6fiLhSXzp+B07qKE+bT+OXf
      +EfYtWdvj7RfKUif3bv/EHZ/6r/CZb4bU/wW5l75PXiehytn38bB3D2cXzSA+k1cPf2mMq9H
      fhb0OxF+WgRz2EStNFcp/VB3CuoNSkEyajALdFWSdruNfD4P27bjajExb0lkTvH+0ox8kdlX
      4+beKHDOezxUg+YqCqkVF8WnYWFhHqf+8L/DznwHl7X9qLjnkTcjOAbH9284eG6mDZ1xnJnX
      8cT0stuKMYbrbg4tZzsOfPa3wZgG3/dgGOaGBlbabRenf/g1hGe/jovRTjTmb6Fg+Dg0FuJC
      PYsD5Q7MD/5jFIrDFVqIq4McA0g7n1YF13WVblIaWyXNVHk7VAQPLJepqgg9bXzXdWO1Sv5e
      RUw0h2w2G6tcm20LiPuWiXMWf5dXLLLVVlUUn4abN25iPsjhB/7TmHrqSyh8/H/AvR0/jwv+
      Vuw7+j7cco7i7PQvY3ep9yVvsZtA4EJjGtxWE7lcPtF1YSOQyTg49uEvItj6LF4oXcCjEx4W
      s/sx5nDc9R1MZTw0X/k/MH/3zlDjiXMVtwxVpVuQJBeRptaJRKxaHShbkvKKqLM0pQeryjlp
      DvKPigFFBpLHoeNd1423XO233el6g/PlbY/SpL3KC5Sot16vFYDzboEzjyKUKxUw1i3pe+c7
      f4ynPv2riKIIp/70f8JeXIzPYYwhjIC3quN44lf+GTqdNv7iy/8Wz338F3DwkSObIk28Tgdn
      f/Af0brwMs66E0DoAZqBSTaPoumDFWaw51O/Hd+j+L84PzGFgf4WCUvuLCcSXNoKkOa+FK9L
      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
    </thumbnail>
    <thumbnail height='192' name='Obesity Rate-BRFSS' width='192'>
      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
      UmP2vGXp0FbeQ2OVdtHY7A7BbQeYnJzku9/9Ln/xF3/B3/7t3xIIBHjqqadoaWnBNE1+8IMf
      oOs6x48f56WXXqKqqoqenh4ymQw9PT2b7rKIHMCkKlTJ5GQYVBVTz3L50iCZgk5nRx2rWQ/q
      4hC+HXtZj8yxc2c3Da3tXLh8A5vdQd9uNxcG3iRnSHT09hKduMWaaafCDmvxJcIpje57VJku
      URxomsbFixdpb29HVVWSyST19fUEg0EA5ubmiEQiNDY2UigU6OrqYnFxkfPnz6MoCq2trXfq
      ht6LIooCgd0Xwp5fIZk3yESmmUvkwdRY152sxWbBrhCfmyGvb+SXiIqboFPDHWpESs9ilHdx
      bF8Xs3OLpLImh/bvRs8nOX1uiLaWui0eXYnN8uKLLxIOhzl//jxTU1P8+Z//OQcPHuSVV14B
      IJPJsHPnTg4dOsTw8DDRaJRkMkmhUKCzs5Nr165tuq+icgCAth1tzExM4wyEcMkCZYEKyvw+
      hOQMYuUuMrEw/vJ3Tng5XG7sigzuKnKLI1y5PkpZoAyP14sI2Jx+ju3v4tpQqSzKduFLX/oS
      f/qnf8pTTz1FY2Mj//Zv/8apU6eorq5menqa5uZmRkZGOHPmDDU1NXzqU5+irq6OlpYWLl++
      jN+/+czfIooCGaiqiSKLG/cAO52ouQx5zcTtdqEX8giKHVMrIMo2pNs5QrqmgXi70G4+S0Ez
      cbucaJqOoshomoooyWiqis1m28gpP/mfEXLxRz4C0zQtOWxvpXZR2ewsR3nmz+78NZfLYbfb
      SafTqKpKIBAgm82iKAqappHL5SgrK8M0TXRdR5IkkskkZWVlm4rylcKgj5hSGPTxaJfCoA+J
      MXfemuK4ho4uWlRo1jDQLbkjzEqb709bCDQhBlosseWDKA4HMFWuXrhIRoOWrl5sazHsjY14
      gPjiNLq3jkrP2x6vEw4v0tj44BEd/co/lYrjPgbd+9UWd335yXSAyK1BHE299FVIDJy7TrPH
      DnXVRGcj2AoxNFs16blhIimVnb07WZiZYHlplqrmXXjMBLemFqht6cSpJwnPLyMoDozCOrVt
      fSi5CJOzUerbu0vFcUu8h6KIAsWTBaqCbkTZgSIZmGae0ydO4amo3DjoYoKuG+QT84zOxpBs
      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
      Bv3/ASdQ6l3NVdOaAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 9' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Test Map' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top Chronic Conditions - USA' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO29V5Qd13nv+auqk3Po0znngNCNDBAgIgmSEMUk2ZKubV1ppPHY4/G8+N1a
      a57maey75mrke21d+8qSLdKiSIokSCKnRmwADaDR6JxzODnWOVXz0CAyQaBBoAGc+q3VD31O
      naqvdtV/72/v/e1vC6qqqmhoZCniUhugobGUaALQyGo0AWhkNZoANLIaTQAaWY0mAI2sRhOA
      RlajCUAjq9EEoJHVaALQyGo0AWhkNZoANLIaTQAaWY0mAI2sRhOARlajCUAjq9EEoJHVaALQ
      yGo0AWhkNZoAnnPS6TSZTGapzbgniUSCpV6SrgngOWepX7D78TTYpltqAzQeP7/Zf5mByeBS
      m3EXSkZBFEUQls4GTQCLRiWdjDIzOUkgJiMZ7RQU5mM3LRRpbH6ClKUAl+nRrhKcGSVl9OFz
      GBd9jp7Redr7ph/NkOcUzQVaJEo6QfuRTzh6toOhkWGunT/Ox/vbiCoL349fOkDnzKNfJx6a
      IxSXAYXZ4W66Bmd4Oj36ZxOtBVgkibFztE/n8Mpbm8m3GMgkApz/9D2OdTWwu8EBqMiJKAF/
      CkQ9FqsFvU5EUFXkZIxIPAWiDovVilEngpomEoogZ1QEnR6bzYpOFPAUVuPSmUknwoz0dTKU
      Kcbt0GExWzGJaZIYsRolQCUjJ0kqEhajfqmL55lBE8CiUBm91kHOyj+l0LrgmohmNy0bG/jV
      0S5iDWvJpGJ0tR1iIhMgmspQ1LSZbasqUUOjtJ09z+BMCCWj4qndyK6N1SQHz/LB4S4EUUK0
      OFiz9RXqco10Hv4t/srvskK9QOuFTkLKCMGJXsqWraPJ2sW+/gre2V2HkQyjF49zhUr2rK1c
      4vJ5dtAEsCji+OdFfM3W2z4VvV6swXHigCAZKV2+mR0NTlJTV/nDsS5ma3OJjgyjL2jhey+V
      oMRmOPLJfvobKxE7r5G76R1errUhx0LE1du9U0/9ZnaHZPozZWzfWIseyCRtuM8fYDRYTaU5
      ykggRWmd58kVw3OAJoBFYcJmSzEalCHvpruhxmLIJhN6QJR0OBwu9CLo8oso1g3ij4bx917k
      eO8pTh5aKHpRb8YXF6lftYrTf3iX9zrLqKwup6rS9rVWiHo3lRVuJoYn8BVmSGSM1Oc6H9dN
      P5doAlgUInklhZzr7SVe04BZAMgw1dGFWLEVK3Br/1dNJAmrUKjTEbYVs/2tjayvyUW4bfhv
      JX/yn+vwT4/R1XmBVr+O3Vsq7muFIEoUFhbR3T3KvBhFcdbgNC3hmOIziDYKtEhcNZtwTB7h
      WFsP/mCAofZj7L2qY8vqgoVaRVGIhf2EwkGunG4lYPKS43JRnGfl8qlTjPuDhAJTXDt7hpFI
      goHzp+majKC355DnNJBM3TnWI2A0icxNTRLwh4jGkygI2PILcUemOXNpkuKGIrTu78Mh/exn
      P/vZUhvxLCIarJRXFDB3rY0T59oZTzjZ/uouypwGAFKxML1Xz3HhwhXi9mq2blmNx6zHmVtE
      geTn0OHjXOkaQ1dYR0OxF4s+yeWThzlz4Sp+fQU7ty3HKkEqFsLgKcFnN2BzuFDmujh+uoOo
      3kNBvgu9ZMae6OJcvIadKwuR7rBTURSOtg8z5Y8++UJ6BhC0/QGebRQ5RPv+QySWbWdjieOu
      72VZ5v/6n8e0ibCvQBPAM0wmPccXv/otwZJNvL51BVb93R6tLMskUhnUpYw3+AriiTgmowlB
      WDrbNAE858iyjCiKSNKdztHSE4/HMZmWVgBaJ1gjq9GGQbOAzqEZQjF5qc24i1QqhV6vX9IW
      QBNAFvDuoataJ/greCQBTHYe5rK/hK2bqjBc/+z8p79EaPkxzXlp2o9/jlS+meWl95mdHDzM
      +/MreHvVV0zhZ5J0HP89+85OIOhFBFGPq6COXa+8SIFNz/S1I1ycLWL75uobNiyaiQu8P+Di
      7U23TEBFevn1P3/CdAZERKzeItZu2UZjiRu9+PR1LDUejkcSQFpOEE/e3rSm4hGEDAiijuYX
      9zzASRLEUsp9DlCRTTnseutlllV5UNJxBk5+wIETA3xvdy2Z6zZ8Iz35TIpYMn37Z0qajKWe
      //zj3bhRmO46xeenTpDj3E2R65Elp7HEPDYXSFXSXD19EH3li9TmGlGS81w8cZjWK+OIdjcl
      JQ3seGk1ViAeGOHIB3u5MhahZMV2dm6sw6q7u3ZVVRVBMpGb5yF9LYly+5cocpiO04c40T6M
      6K5gx8vbqfJZQVWYuHKQvcc6iak2Nrz+HVaX2BAAOTTOycMHaR8OYhWTxMtfvc9difjK6igY
      OU86EWew+wppcwly3xEuRAvYvX0ThmAXhw4cZTgkUrduOy+0VGImTvfZIxw514tscNO87SU2
      1eQiz/eyd+9hBv0pnIUreevbm3AGu/l9p8JbWxoBmOk7S28knzXL8hntbEPx1TJ/9jOGzQ28
      9OJK5NELHDh8hpmUhZWbX2ZdYz6GJfSpnzUeTQCKzPz4AB2X5RsnGg/KFAGoKoHZcYyFGRQ5
      wrkj+xg2LOfP/4+3YPo8/+NTP1+2HZN9A2x8Yw8/3S1wZN8++scKWF52i9uUijLcdw0laiUe
      nGJwJMrW15u4bY2UmqHn3EE6o8X8yU9fQ564wPsffY7jT9/E0HeYzztF9vzwL8gRpvn4vfdQ
      t3yHloI0x7/Yj1K3k//99QJS/cd4d+h+w4UqkblpQlEZUS8RnB+hs7sTc+Ua3thdg0mZZf+J
      azS98me8Zo1zct9+zlrNrLTMc2Va4O0f/QUOdY6+KQXUEOeOX8a77g2+VeUiONxHKK7iTIYY
      mboZBpGIzDLrd6CqCqGpPtrPD1O04gW+taIMKdbLp21+Xvju/4JPmeXgvlY6bNtpKdMiQh+U
      R2wBFOKRILMzxhtT8JHk3e6MHI8TVqxsWF2HXhTBbMRwi/9csfpFlhV7IB3H7fOiU+44hyIT
      Dswzq4ujKiJuj5lIMI5qvxmOrCoZpmf81K99DZtRD+UrWee5wNWpOPauAHWbdpBv1QGFtKwo
      oXNsnLAbkvoqNjYWI4lgNpmRxLtHhlP+Lj76dz9GQEWiqGEtPoeRYFpGLFjJSxtqMOpE5Ilr
      tPdNMp/+gLNAbHYM1byMdc1m9LEpWltP09TURFWFE4EEHreBtosnkRJN1FVXUWyWIHyf0pYz
      OOpeYOuKUnQihAev0DEWIPbx+4BCcGKWaFlIE8BD8GgCEI0U1daxdXv9jQ7oKf+Vuw5TFZAk
      HXr9IidjTC6aVq9iWaUbRUkTnL7IwcPtlH5/081rqJDOZNDpdKiAgB6TGWQ5g5wS0OtvCk4y
      GBGVNBkyIFoxfI1ZOnsJm7ZvwoGAzmjGbrdhENJgdFKRk4dBd100sTjm8pVs21Z5Y4LFYHVh
      skjseMXB7MQYXac/5Zihhv/02hqq12/HPTvL2NA19v77cRpe+T6r7mOHZHVTXuBDul55JGNx
      cuvXsa3Ze32eV8TscD1k4WY3T2QiTGeUIBVmeCyAkpEJzMwRSy9iZasgAArxQAhZJ90W+CVK
      El63k6G+PpLpDLG5XtrHHVTmWSmtMNJ/eYBQUkFJBenvHsGUk4tFdJAODzAyH0PJJJmcmiGR
      St91WVFnIScvj7y8XLwuOwbpupgEEAThRpCBmF+JZ36AgGjF58vBpldJpNIkY0HCcZGiuhXs
      2LkOw9ws0XSCubkQRncBLRt28FKjme6xCEgSUipBPJMhFZ1jaGj6hqsoLFzwxvUcpVVkxvtJ
      GZ34fF7MaoaEcrf9Gl/NE5kH0JmcNNaWsO/wbzmzTyTHqyeVKXrwE4TH+eLIFY5Y9SCAwZTL
      htfWY+UWj0GQqFrWwtjh4/yP81+A3k71mi2UWyWEZespPfQZv/7HVhREildsYVtVDmadk4bq
      axx575cclGyUuFQyjupF36doLmPNymu0/u5fOKiIWFxFrH7xRZxqhM5TR+iZjKBIZgqXbcIm
      qMxNXWP/p90EUgomeyHbv+UAaznL9R/y33/Ricniwm0B3d0xbgvl6mtibckwn//bP5FSJew5
      lbyw8wVyrfc+XuNuHikWSFUUVAQE8WatpCgZECQEVFRVAUFEVDNEIxEUvRmzTiA+fpb/OCnw
      x9/bhEVVyKjCQrOuqiiqulCrfjmSoaooqoKi3DRTEEREUUQQQFUVVHXBBtSFayqKCoKAKIqI
      ggCoqIpC5vo5RElauIaqoqKiKAvnEEVQEW+4GF9eP6OoiJJ4eziZqqKqKqogXL/G9c9unO9L
      O4UbZaWoN+26/uldxwrCQgjzjXsQBEC4fq+3fnb9f/X6Obj1HDct1aJB78+TCYZLx+m92MrF
      QT+CAKmETNGqnbzYkPvYL53tyLLMqatjzATjS23KXciyjF6nX9LEWE9GAKpCKh7BHwwjZ0Bn
      suJ1O9BLWize40aLBr0/TyYWSBAxWBzkWb7CmdXQWCK0Klgjq9GiQbOA//vXx7k08A3kaXwO
      eSoEkAzN0D8ZoryiCvP1tAaB8W6mZS9VZS78I91MJj00VOUhfYW7qGQiDHROkb+sivuOAioJ
      us6don86DCYP9SubKfMJDLSPkreylq/PxrNAOjTElRE9TU2FT0UmhmRkhsHhIMW11VjveKoJ
      OUP8ziA/DeApcYGSoRm6evtJ3PKMAhM99AzPoyBgdeVR4LPf11glE6G/o5/7jXWomTDtX7zP
      2WkD5fVNVOZZCMzMIZOg/3IvkYewOR0Z4dLVCRazzGTk5HucGLpfBOzDk4zN0n2tn5iWOfeh
      eCpagK9DTiaRBT2qAAIZwjOj9A1NI6PD7nKQV1iFXQeqkmJ2pJeRqQCizUdVRTE245ejHwqB
      nnbORor5s3c23hExOQ8ZmfnxfiYn5sHsobKydCHVeTrG6EA/k4E4elsudTUlmHV3SFHNEJ4d
      Z3B0ipRgoai8glynGSEdZXRwgMlAHMnkoqKqBGV+mEsdXYxNn0U/JeAtX05Vrgk5PEVXzyhx
      9OSWVFPmswIRRgfjeH0iwwOjmAsbKHULTPb3MDofRTS5qKmvxq5fwnHEZ5ynogW4Pxkmui9x
      uX8aBZX4xDU+23+K2WgKORmh/fhn9PsBVOYnrtF+eZBYMkrfhdNcHJq9eRpVZnIySFFFCfp7
      DDyH5npov9BHJBFnuOMcbd0TKEqCwYutHL88SCqVZKrzBPvPDXOnMxEPjtN25iJzsRSR6T4O
      Hz9PKJlkpvcyp68MkJJlQtO9DE4lUJUMiqKiKAtbFymKSiYyQevJi8zFU6TCE5zcf4jhKMA0
      Z/af5fTp43SNB1DVDLPXTnLgbC+RVIrgyEX2H7lMSKv1F81T0wLMdh7jl11X+bJyTcSTVL9Q
      e/tBSpSrV4Yoat7C+roCREGF8QvX8+ULuPLrWb5zK4UGiQnzCa4kbkkGpaSJpBQcNvM9J15s
      3mrqd22jxKBjtvMcF2MhUgGBq5MJNm7ZSVmOCUWu5vPf7KevoZyyW34bHL6M31hKS7EbQXUT
      O3qBLn8DuaEoBk8+NXW1WC1G9HoDBp2LhlI3UsUGNtZJgMLE5VGiBisNxcVIZLDGj3H66jSl
      ayE4N0zOhtd5ub4AU3qaTy4FWf/yTirdFtRUlGOf/Z6+sUqqHnEjjmzlqRFATsMW3tn+Em7z
      wv+DbZ/QEbvjoHSKkGSm2uO4Hq4g3JZfU5IMGI0L9ftdoQuiDrtRpC8U43q46G2I138rAqIo
      IQCpZBJVkLBazAgCSIZ8cj0RwnckWQuMDTE4GoLw9RUKdjcuvZnC+nomz13kzOk5JElP+Yp1
      NBTY77wpwqEJRrvmSfhnF8wSPVR6F7rWrrx6ljcVYRKAcJRZnYktZsNCOITehNttJxaNgyaA
      RfHUCOCBkHQY5RT+ZJJi1XojduiB5jgFA3kFLo629RNfVY5ZvB4jpILwFY6g3mAAJUM8mUS1
      GFAVP3N+MyUW4BZxWty5lNla+NbmCnQsxP0sBBYVsH5bPolYCP/AOfa3D9NQ0AQIKNdjiUDC
      bLaRU1vO6y+uWGgBVQUVEfAj6vTcWBxnMuOWE8yl0thNOtRMmlAwhKVUe/sXyzMmABv1VQ4+
      PX6UeF0ZxANcm0ix/IF+LOCuWcW2iU9493f7aajOQUzEUB2lrFx278FPg8tHvU/HiaOHqS3x
      EhrtJlq1mRoXZG4RgKd6GcrHxziozuKzQmgqTunWFvRDnfRMZnC7jUQngzg9Cy5dTkklY+f3
      cy6WS05xAyUV1eg+PcjnJ5IU2iTikXlsZRtZWXaHQeY8Ni6z8Nlnh5iqzkOZH2RSt4yXi+0w
      v5gC1XgqkuMKog6L3YnH5bjRB5D0JhwuLy67Cb3ehNPtxmE1Y3HnkWtWmPWHkezFmOP9mMo3
      UGQXMVlsOD2Ohfz8egM2hxOH5ZaFk4Ieb2kVTjVIIBRD1dspqSjFaTZgMllxeZ0Lv9Xpsdod
      OKx2PPn5WIkzH4xjym/ghVUVmEQBQdRjtbvJ8VgxmtwU5TtJhAPEUuAuq6LS58FmtaAkQsyH
      4hi8VaxbXoZRJ2LyFGJXQgSjSSyeAny+HMpLfcTm5ogm01hzKqit8GEQdZhMdtxe2/VWTsTq
      KyZHF2c+GEGwl7Jx4wqcemGhDG1OPB4nt2ZI1JLj3p9nLDVimun+a4yE9eTn2kn5+zjZFmbb
      H71G4eI3UXyukWWZ/+/DNq6NzC21KXehKguh789/NOg3hkoqMM75tguMzMURLW5WbdxChVd7
      +78KLRr0/jxjAtB4WDQB3J9nYCJMQ+Px8WyNAmksis/P9DI+9/R1gtPpNDrd0r6CmgAeBiVF
      MBhDZ7FhMeoeou+mkoolwGjE8ACr4JRUjEhah81iuGcTnU5ESagGrOZ7BXXczamrY9qa4K9A
      c4EeAnm6jX/8p1+z/2Q3qfv2nMIMXB64Jbo0SdfhY1wN3Cfr1S0kp7q50D1FGkhG5hgcHCd5
      S7xPaOQqHUNzaCFAj44mgAcmzejVUSo2bsQQGyMYv1848zwXDrXjX+SVzCXNbG0uwQDE/KNc
      vtx9W5izp2Yt6+vzteb7G0ArwwdEiU5wec7BxpdL6D01xcx8iFyLCwhw5NfHcG8qpOtwG1LJ
      SkyzJ2kbmqH374cwCcW889d7gCQj7cfo6B9hLpqgsHkPe7bUkglf4fjBMKVFAY5fDbDppTcp
      nT/Ah/7l/GnNPL9+7zMm55N0910mv6KFl1/ZTOLi77kgref11XkMtx/gQGsXkYyIu6KZV7et
      I8f2NCzReTbQBPBAqISmZsh4vbitLkqdIpenAjQVuwCVaHCEiR4bq175Y2oKnAjkk5i+wNq/
      fpMSABLMk0LWVfDKD3bj1ofY+29fMLm2Fp+aYmKgk4ynme/88Ut4zDpCcwrpjAIFLfyn74oc
      v+hn8+5tuK/nnxxWMiiCiprJMDI4wvI9P2Z1sZ65uQBm7Yk+FJoL9ACoSprx8QlMBhPxaBy7
      x8pozxCJ6/0AncnFsrUbqc533qdTaqeyqQqvRY+o9+K2Z1jIASxiz61i/YYVuB/y7RVEkdwc
      J2373+fgqU5knQWDXlPAw6CV1gOgyDHG+q7Rl5pmsucsAJnZMB3+zaz2gN7gwOU2La42EURs
      DhfWhxpV+vKnOmo3v03F6jDDXR0c/vgTGre/THOJezGWZCWaAB4AOTpC0NjM93+wk4UwfZXZ
      8++zv2OC5i33WoJvRCfNMzebosgloj5CKYuSnljUTzwh45QEEG+eTMlk6L96EUf5csobm5ga
      nSWWTC7+YlmI5gI9ANGJCZyNK/Hc6FsKOOtXkxsaI5TR4fC67tifLJe12yq48N4/8PN//JQZ
      RCwuJxbdzXAEu9uLUQRRsuB0W257EJLZhc+xEN9k95WyrFji41/9A+9+3oY/BQabB7fNgCCA
      PhNg32//iZ//998y66xgWYnv8RbGc4YWC/ScoyXHvT+aAJ5zZFlmbDZCIvX0TZslU0kMBgPC
      EsZDawJ4ztGiQe+P1gfQyGq0UaAsYGo+Qir99DX0iWQCozGxpC6QJoAs4BcftWmd4K8gCwUw
      yrv/z38wIQqIejMljevYun4ZLpO0pL7obaSTdJ45TqxwJS3lOZqf+hjJQgHEUaRavvfXr5GT
      DNNx6gt+/+E8b7+zDdfTkmNTZ6Rh086ltiIryEIB3EQy2lm++RXUP7zHmeE4L1dZSSf8XDx2
      lN7ZODkVzaxfU4+VFEOdZ5gMZhgdncToq2LThhXkWA3ERtvpo4rc+DXOXo6w/u1teBNznD1+
      goGZJI7SZbz0QgN6IDh8nkOnuokpEhXLt7C6MR8hMcPZQ0cZDqaw5dewbl0zuSaF/u4OpJxa
      ynxW0pEpzp8+Q990HGdxI1s3NmLViYT6T9OTyiM2cIHxiEBV8yZWVufytOj4WSDrW1dBstLU
      kEtPzziko1zc9xEDYiFNyxpIDhzjwKkekmmZoc52ZoQ8Nm/dTLEwyIHWHmQgOTvAla5uLvbM
      Ub16GY7kPCc/38+0Lp+mpkro3c9HZyZJK9OcPnQVe3Uz69Y1Y5dnCCVh+tIR+jKFrFy7nsoc
      A5FQFJQ0UyN9TAeTZOJznD12nBljOdt3bCQ/0clnrb0kFYiOdXLo1FXs1WvY1FLByJXTTAYX
      k7A9e8nqFuBLkskkRqMJZjs50hejKL+PjhlAsOMUU8gyWDwFFNXXU+CFgoJNjP+3NmZowgyY
      3OXsXrWwx3twqJ3uiQl0EZWOScDowx2fJy7W0bCykDN9XcTtJnJ8lRhFsFWtxDtxiZ7OIDaX
      m+pCAyo3R2xCc+PMZby8sG45bgPkv+Qh9Jvf0R+pxSPpWLnlNZqrgLiV4bEZZPmb3XfgeUcT
      QDrAxSsRmnblgilMjq2cXX/0Kjm3tI2Z5O0LypVAkDmLBSeQAvT6mwtQjEYDpvxGdr+8A4/l
      9uK1rdxOfkOckH+Gy2dP0+MrZlVxNa+8XkY8FKKn8zzd1wbJXXczJ6Jeb0FVRxdebIMI8jz+
      sJUKLR3oN0JWCiARmaHv6lVmM0nGeq8RKV3HGzkGEKpZXdLGJx8corkuDyXqJ6HPZVltIXLU
      z0B3B0lLjP7OHkpX78DCggBuxegros7Yzif7T9BSlYMSDxBQ8ljbaKD1xADuwhyMQpxwUqLQ
      pKf39GeMUUiOXYc/GEWfb70t2a/Vk0uJ9TJHDh+jodzB1LXL6NbsokQP2q5fj85TkRv0ySIi
      J8KEw2Ei8TR5tavZsKwMgySAIOEtqcCUmGFyxk9G76KyphKXUWW06yJzspF0Kk1uXQurqvPR
      iws5OY0OLx7LwmsriEbySovRx2aZnAmQEG00LKvDabNhFeNMjk8SiGSoWvUCVXlmrDYzwalx
      ZuZD2ArrWdm4kLla0htxeXKwW6348nMRY/NMzEawlqxg04piDKKAIOkwO324TICw8Bun04np
      luSgWm7Q+6PFAj0AmWSUtmOf4255mxrvUlvzcMiyzH/53Rk6bt0t5ylBVdWFWWAtN+jTjZJO
      MtTdgaV0FXkPuo3kU4IWDHd/NAE852gCuD9ZPw+gkd1k5ShQtnHw/ABT/js3XFt6tNygzwEZ
      OUFCVjGazNy5ffDXoqRJyGAyPt7HcOzSsBYN+hVoLtAjkaLv8Ef84y9/ybmxr8/GkJgbYXD6
      luHIcBf/8fmlx2ifxtehCeBRiM3SFXLwwroy5vqG75oUu5PQ4DlOdj99WxVlM5oLtGhU/JOT
      qG4v5aU+5s53449VkWcRSM738skfDjIWSCJafex669sY+4/xh33nGJe7mW4zUbrhbd6qBzk0
      ydFP/o3OwVmwFbHttdeodalcPrmXvmmV6akx4pKXtaurmOq8yFggQe6yV3lzRx36TIDWjz7i
      8miAtGiionkzW9fVY9dr9dqDoglgsSgZpmZmcHkacLnsmCWZWX+YPIudsUsXEJft4S9bCpHD
      U8ymRIrXvsIfi3EOxFfz/c2lC+cIdqDEI7g37+JHr3gZvriX/u4xKtcVkIrGEIs28MM3vs34
      6Q/Y2xXiO2/9CJ9pmo//5SJzO+rIF6Bkxcus/lYu+uQU+4+0MTVbir3gGZusWEI0ASwSJSMz
      NTGJvXkjGUS8RpWhST9NRQ58pcXM7v+MD2caWL6ykYrcr45cM+ZVs7x8IZmV1evFOLIQzamz
      eagsLcKk12MymcitqCbPbgRs2EzCQryoYiIydoh9X4wRS6bwJ8x4GpOAJoAHRRPAIpHD17h0
      ZRrd5G84A5CJETCZ2bG6HHvlJn78oxamh3toP/E72vNe4s0td+56/ehEu77gTLiG7/7o2zik
      KK37jyCoWjj0w6AJYJHMdV2lYPePeHvt9TW76TkO/GYvvSGZnOl+Us4iiiub2CTN8H5bgAxl
      iHodyfE5YpliDKr6yIWfjEQxeXxY9DA31M21gSma6r6Bm8siNAEsBiXA8JiDlXu8N4fRdB6a
      V7g5Mxym1J3hzL5/58PZBEZPKbtffxED4KhYTXHnXn75X09QvvltvlVrxGm/GQagM1iwWgwg
      LOx6L+kWvtOZ7TikL7OPSliddnSAa9k2HO+/zy/aVPLL6ymqLMOqpUd/KLRYoOccLTfo/dEE
      8JwjyzKDk0GiifRSm3IXWm5QjceOFg16f7QZE42sRusxZQH+cJz005cd/Xpu0LSWG1Tj8fJf
      fndG6wR/BZoAvo65Ht779AjToSSCzkD58hfZurYOqx4gzOUDp1CbNrMi33zv36sq4wMXCUsV
      1JW5nqTlGg+A1gf4OhIBxk31/Pmf/zk/+bN3yItc4oNPjzMbTwM2mrbtYFne/ZP0RIIzBMJf
      Fyt6EzkeYt/7/5O++Ue0XeNr0VqAB0AQxIWVSzoPLVtfIv7FIXrH/eRUWRm40Ie5qY5Cs4Gk
      f5iTpy8wH81g8ZWzdm0LXhNAGv/QFT4fCJHQuVm+djUVXhuCoBIYvsTJC/0kJCvLN7xItS3E
      6UMnuNQ1wHD8d1zN8dCycTuF1jg951q5Nh7CnFvBmtUr8RghMjvA+XOXmU0I5KWeNQIAABKU
      SURBVJQ3srqpEqtBq9ceFK2kHhLR6KCiwMj4dARIMNLRzUxqYYzdPzaGpaSRNevWkCuMcep0
      FwmARJSZuEDV8hZqPEn2fXaCqKKQHL/MocsBalpWs6rGyYUvvmAwYaemaRmlBTk0tqxn9com
      PGaFiQsH6ZbzaV6zGm96hNaTV4jIaTrPHSfhrWfNqiYsxIknHryl0dAEsAhEzGYD90pmk1td
      jz3lZ3RkBH9UITI/SSwDmJzU1jdRXV5G47rNrNKNc3k+xcDVQdK6JFMjI4zOptGpU/SORvH4
      8nDaLPjyiynMz8UiTHPhkh+jEGB0eISoLDI71cd8OI2ASiIaIS05aFrWhNeh5Ux8GDQBPDQy
      c3MJTKY7ik4NcengIbrmU+gNRowGETmVIH3nBKxgxulQSCSShEJxBMmI0bjwV9K0kaaie2y8
      nYzgT6g3jrO48mhubsZr01O3eisltiQD7af4aO8hxgKJx3bnzyNaH+AhUJUMwfE+OucFmhq8
      wC3rgGMzXA07ef2ljVjFNBO9MuOzwS9/iaIoqKpCIjBA56Sdph1m9HkGBlI+mprrMUkQj4ZB
      bwBFRlVVZFlGVSUweyg2p5Hy6mgusiFkksQSaQySSMLgoKG5GJ0a49LhVoZn/RS7CpaieJ5J
      NAE8AKmJDj76aCG1YCYjUNS4mhKvldsEYPRQYznPHz7+BLtBQk2EiGbcAOiUJH0dJ5gZ0BGP
      RrE0rKXCqEdtbMG+7xgfftiDRS8gWVwsa1lPicNAjtNM28EPGcrLZ+XaF1ixqYZPD37ItNOB
      TgRbQQ1rltUwcPEwg0EdAgpJ1cIql30JSujZRYsF+jpSEcam5kilFRAkrE4vXpcVSQBIE5oJ
      oXM7sehE5GiAiZkgimTA4bQhpBVsLidK3M/cfIRUWkEy2cjJcWPSSwioJMPzTM+FSCNgcXjx
      uGzoBUjGgszOBchIJnJy8zFLaYKzUwSiKQSdEafHi8NiIBWZZ84fIaUIWJ0ePE4rOvFm/0SL
      Br0/mgCec2RZ5vfHuhieDi21KXeRyWSWPEhPE8BzjhYNen+0USCNrEYTgEZWo40CZQH/8tlF
      escDS23GXSgZBVEUv3aDjO9sbWRV7eMZ2tUE8IRQ0zHGh4eZDSUQDFZKKypxmSVUJc38xCAT
      sxEyopGcwhLyPVYkQQCi9F/qJZhREAQRo91LcXEBNqNAdHacobEZUoqAqDeRV1xGnst8z3dp
      cDJIx8Czu6PYrtW3T+4pisLw8DAdHR0ANDY2UlFRcdsxmUyGS5cuMTY2RiaToaSkhMbGRoxG
      4219Dk0ATwBVDnGl9TBX5iUKPDYyqTES+lzW1TiZvnqUfRdn8RXmoZNDXLnURcuuXTTm2YAp
      jn/UiuvFJlyqQqjvKp2jy9nzQg0TV89xakylptCDnByls+Mqy7e8QmOhZSl3HHrsqKrKlStX
      ePfdd/H5FhKKJRKJuwQwOTnJ+++/T25uLoIgcOjQIXbu3MmePXs0ATxRVJXZoat0zpvZsfNF
      cu0G1IyMrEio8QGOnZyk+c23aPCaEFSZqcuH+OTkVWreXIceMDuKWfPiixSoKulAH+/vvcZc
      sgLQU1C3jBdbSlEUmZnBixw/1UrO7u3kWZ++EZ9vClmW2b9/P9u2bWPbtm03PruT3Nxc/uZv
      /gabzXZDACdPnuTVV19dcLuuo3WCHzMqMDM2irOklhzHQvMr6gwYDRLxkQFm8xto9JmRRAFR
      MlDQ2Ih3cpCRO56pIAjorTZsBv31s974AlEykFtUg8cUZXo+/CRv74kTDofp6upiZmaGX/zi
      F/z6179mZuZu906v1+N0OgEYHh6mvb2dxsbG215+0ATwRIhEIthdLu6sl4PBIB6v9/aHYHDg
      NsUI37Ghi6rIjFy5xLRgwn6PXVUEgwGn1UbmHrXh80Q8Hqenp4f5+XkqKirw+/383d/9HanU
      3WHgx48f55133uGv/uqvKCwsZNeuXXfNOWgu0BPAYjYzGYmi4LztZbfZbAQHg6jcMhCSiRNN
      GSk0LvwbmDzPv/59PyZBh7dyBbt3rcdmvPsaqpwmEo1iF59f9wdAkiSampr4wQ9+gNvtJpVK
      8bd/+7f09/dTX19/27GbN29m06ZNDA4O8g//8A8Eg0F+8pOf3DYpqAngMSMATq+Hq2MjxJsK
      sOpv1kCWvHx0rQNMJZeTbwRQiY4NMG7OY+v1sH5X/ir2/PXrFN521rtru0RknmBSpOI5D4Zz
      OBwIgsDQ0BAulwtBENDpdHe5Nl8iiiKVlZX86Ec/4uc//znpdFoTwBNFgPyqJjzdB9h/2sLG
      unxSoTHmhHJWVtSxsewyn316hC3rGzAnJjl1rIeaDbsfIMG5QiISZG5ulnR0hjOt53Ase5l8
      h/7x39MSYjabWb9+Pf/6r/+KJEkMDAyQTCYpLS0lmUwSCATw+Xy0trbS19fHunXrkCSJzz//
      HJ/Pd1dIiPSzn/3sZ0tzK9mCgGSwU15ZRGjgEm3t1xgNqtTU1+I0G/CU1mBPDNF+4TL9U3Gq
      1m1lbXXu9XmADImoRF5FHrev81LJpKKMdHdwtbuP4dkUTS+8xOoq7/Uo1ZsoisLR9mGm/FGe
      VTY0FlNRsBBaLggCdXV1KIrCe++9RzQa5ac//Sler5fx8XE++OADli9fjs/no62tjb1793Lq
      1ClKS0v54Q9/iMViua0foAXDPec8D+HQ/+d31rNjVcXXH7gINAE858iyTEbhK33kpeRBo0El
      SUB6TPZrfYAsQK97OsOhM2kJg17SwqE1NJYKrQXIAtp7JwlEn758QalUCoPe8LXRoA1lORR4
      H8/wriaAb4B0zE9HZx/5tSvIsxu+/gffKBlmOs8xZK5nTbnznkd8cLzrme8EawIAlHSSie42
      jp+5zFQohclZwo5vv0a1+0m/dLeSYaTzFNPpBhqsehQ5xkjHGY6c6yQQk9FZc9ny0m7qi93o
      RYVYKISsM+OwGBGAeGiEMydGWPnqJhaXOlfEU1VG++8O0unaQ73L8FxHg37TPFMCCI5e5tj5
      CZa/9D2+W2glNjNJVLe03Rg1NMDZ7gxb3izHIKhMD1zk2JV5Nr7xZ1R5DQRHr/Lpwb3oXnuL
      hlyBgbaTTHob2bHi+rapqkJaTrP4oTgByZDP8mYnp9u6Kdu2DMvT1999anmGBKAy2tOBq/Fl
      6gudiALYcouxAUp8hjNHDtHWM4Gid9Cy7VtsqvOBMsyhjwYx2me4cm0CS8kKdu/cRK5VRPYP
      c3D/QXqmEniqN/DO7mb0yXnOHT7Aub5pTN56XntjG/kWPbPtnzHo3IR56ADtUzm88kdb8F63
      abqrHaVsPXnmhcRZo0ODFCzbSmWOFVEAV8lyWip7Gewbw9h/kQ8Ot5MyXOLKIQ8NW3ayvkoi
      HZ/lwoHf09U5hqFwOa+/vJFcq45UaITPP/6Cwfk0vtr1vL6rBask0HnsM/R1Kxg7cZB5zzpe
      3VqLM78GXfcF5sL1WFzP0GNdYp6hkkoyMx2jYGXBXbOdqbiMs24T/+tLRQiJMT59dz/9Zd+n
      Qh9joPMaDe+8zo9edNBx8ACdo5N4i0UOHTiJbeUe/rLayczwLOlMlGunz6NUvMj/tjsHf/cx
      9u49z5tvrScZmOB850nKymp5+60Gbu4EEKa/N0PlTjcioKgqkUgMT0PODRsFQcCdV0D/cIC8
      Hd/izbj1RgsgAPFgP3PTUxQuf52fbN3N1X2fcWlsnh0lCkePdlK/+0/Y44ae1j/w+XEvr28t
      IzjWTdesQnXddr7dWLQQZWqxY9ar+ENhSlzuJ/RMnn2eIQEACNxryNjkcGDoP8t7xw8gKxDy
      z1EUAnIEfOXNNNcVYCSNy+UlLimE5+ZIOUrYWJ6LJAnkVxSTCY4yNNLLZO8Y3adFIElg3sx0
      Yj0GBOwFtWxZW45Zd4sBikw8IeA13vxMVdW7fPCF/7/KyZHIK2tiZWMxeiDH62AOlfjsFENj
      PQx/PEWrAJl0kJQ0SGRrGQoCxfVrWVfnuxliLYoYBJHkXclINe7HMyQAI16vkYmxaZpycm9p
      BWQGL5ykfd7Ojj1vYBLh4mf/zP3C4lUVJElEuKX7oGQyKNZCtm7dRL5joVMtSnosJpiSdOQX
      lmPV3fFqCyI6SUBRFl5uQRCwWa3Mz8+jFBUgCguCCMxMIVmXoX+I7oosy5gLl7HzhRaM199y
      nd6MBTCYXbgLc24/nwoqKuISTio9izxDE2ECxdX1zHW00jMVRlUzRGfHmYkkCEQy5BaVkOuy
      okammAndvxa0uTwI4Un6J4IoSprgzBxpqx23GGdoOoLF4cRu1hGe8ZP8soTu9WIJFny+NDMz
      8vVDJIrLSpm4cobB+RiKkiY01smFvhillcUYBBFJpxAKxlAUZSFh7lfZ6M1BDEwwGRNwOB2Y
      pQzz/jCZ62Vxpz2ZVJJoJoPDbHmYQs16nqEWANxlzWyKnOToR7/i80QGk72Q7W/sobwyl8/2
      fcT/e0Qkp6QWi0G67nYICLfkyRQEYWFpoSOftSsrOHjw3zkazmAvbuE7b6xj1fpmDu0/wC9a
      44gGK/Wrd7C5EhBFxHtWrEbKa3Np7RxGrnGhFwRyKlrYEG7lyPv/zMfxNKLJw8adu6nJNQMK
      RZVlXPniMP/1YiuNL+5ibfntNiIsXEvnKGbHhko++fRXHEmoGBw+1m19mUJAEMW73KxYdJaU
      bMPl0vYHeBi0YLhHJs6Zj34PK99gTZl1aZpUNcHlzz9ituIlttW5bxOHFg16f56pFuDpxEz9
      mhUcv9TGrHcjubYnvSAlw1zvOfqFGrZXu+85Cfbahho2NJU8Ybu+HlmW0ev0XxsKUVvifWw2
      aC3AN4CqpInHk+hNZvTSk24DVOR4lJRowmq8uz6TZXkhE8VTGA6dTCYxGu+xwPkJogngOUeW
      ZRRFWdKQ46/iaUiPrrlAWYBOp1vyF+1eJJNJ9Hq9th5AQ2Op0ASgkdVofYDnnC8f79PYB/iy
      b7KUtmkC0MhqNBdII6vRBKCR1WgC0MhqtHmALEFVUkx3n2ffsfOEcNK8ZQfr6/Kvp2C8SSYZ
      5Orpw7ReHkHvq2Hr9i1U5pgX3VGdb/+EXx7oRX99GsLXsIXXt67CfusEsKoQGrvCx3uPMpc0
      0rRtD1saC9DfOwLxkVCVNInwDG1HDxEs3KYJIFsIjXdxqG2cje/8kML0GB/9YR+egh9Q77z9
      FRi9cpQrgVz+6MevEu89xheHz+B7YwsOw+Im0qanpljz5l+wrfKrExekAz18uu8KK779E+qd
      Afb9bi+nDW+xqdb1jbsogcGLHDrbj04N4w+nNBcoW5ibGsVbuZJStxVzbjW7lpu40OW/46g0
      40Mz1K5ehctsoKB+JSVpP2PxxW66EWNu3kiu735ZOxRm+wfQ1a2nKc+EzpRPy9oagkMDJJRF
      XvY+GBwFvPDqt9nSkA9oLlDWIMeiGHLcLCxqE/EU5hG5NA/4bjkqTDhspzZnIWULegcFjhRz
      EQXunXLoa4gSiQQ588u/Z58gYc8tZ8OWzdQVOm9xvdIEAiq55bYbQaFmWy46ZZxkGizfcMYb
      a04RVuDLTWM1AWQJAgKSJN14yQSdDumuKSAVQdBxM2xIQqcTv3o589fiY/dP/pLdAEqawYsH
      OdR6htzXtpNj/TJsXEVFQnfLclNR1CFJT2Z6SnOBsgWdRCoWZWH5skrSH0C13Ll80oxeHyQS
      VlEBVY0TCILZtMjOqKremIlG1FFa1YBVlyKVvHXJqoTJKBMMyjd0lkoFkWUTTyJ+TxNAluDO
      LSQweI3ZeAo5MkNr+xTL6u/cfd1MYYmFniu9JOQM4dFuuhUn5Ytd5BOe4mrfCKFEGlVVmJ0c
      I6Xo0etvdTx0FFbkM3Otg+lIGiUdYeBqN/r8Mp7Ebq9aKESWkIkHaG89TMdYEFUBU+FyvrWr
      BYsoMNj2BeO2VWyqyyE218+xQ61MRhVU0UBlyxY2NRaiW8yQZHSS461nGZ72k0kLZCQdtau3
      s7Yun8RUD8d7Qrz0Qgs6IUH3yYOc6J5DJyoYffVs37Yen+Wbr58v7f8N7RMZUnNDDKY8mgCy
      B5WMnCQajZNBwmy1YtRJCAKkYmFk0YzVpENVFeREjFhCRtAZsVjM6CRhkflG1YVsFbE4aQV0
      BhMWiwmdKCzYksxgty7MMSiZFJFwlIwqYLLaMRmkx5LjNB72E5dvvvKaADSyGq0PoJHVaALQ
      yGo0AWhkNZoANLIaTQAaWY0mAI2sRhOARlajCUAjq9EEoJHVaALQyGo0AWhkNZoANLIaTQAa
      WY0mAI2sRhOARlajCUAjq9EEoJHVaALQyGo0AWhkNZoANLIaTQAaWY0mAI2sRhOARlajCUAj
      q/n/AdjLwWEer6gLAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Top Chronic Conditions-State' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Top N Chronic List (Tooltip)' width='192'>
      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
      qAJQyWv+f7e92Dcikw7iAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Uninsured Rate-Map' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nOy9Z3Ak6Xkm+Hxpy1fBo4FGe9/T3dM9fsjhzHBohhJJUSNSFCVerHi3pzin
      uAvtnomLuNuI2/txdn9chFY/FNoL7WlDWllqSYpWdGM4fqb9tEc3Gh4olK/KrMz87kfh/fBV
      VmZVAQ30oIf1RCAAVGVlfpn1vu/3+pcVCgWu6zp6+OWCZVmwbVv8H4lEsF464JzDcRwAgOd5
      qNfr4Jy3HAMAqqrCNE2oqopqtSo+BwCMsZZza5oGXdfF8ZxzxOPxrtdFa6pUKqHHjIyMME3X
      dUQika5O3MNHB4qiQNM01Go1cM6hqio459B1HZqmdfw85xzVahWWZQFoELGiKC3HeZ4HXdcR
      i8XAORfXoveI+P1MoGkaTNMU63QcB6ZpBjILwXEc1Ot11Go1eJ4HRVHEtfxwXbdxnY532sNH
      EoZhgDEGXddRKBQE0ei6jlQq1ZbQgDUGIAQdr+s6LMtCPB6H67pgjEHTNMRiMXieB9d1oes6
      SqVSy87hOA7K5TIYY0gkEohEIh3XVC6XUa/XxXpkBgtDjwE+opAJKowISDoahiEIx3VdlMtl
      RKNRsStYlgVVVaFpmjiXoihIJpOoVCpCmvpB0tt1XaH20Ofj8Tgcx4FlWS3ET+un1/P5PHRd
      Rzweb9llOOdwXRe1Wk3cQ7t7blljV0f18ECBc45KpYLl5WWUy+XQ4xRFEURK8DwPtVpNqEYA
      UK1Wkc/nUalUmoiVPhemZjDGkEwmYVmW0PmJsMvlMgzDgOd5Xd2T53ktjOJ5HmzbRi6XQ61W
      a7put+jtAB8hkFpi27aQtuVyGYlEIvB427Zh23aTtGWMCakfi8UANBiFiI2MU2KeVCqFSqUi
      DGrZkCZCJOJnjInzc85RKpU6EitjTBjoxGicc9RqNVSr1RYGomt0i94O8BGCbdvCExONRrsi
      BmIAXdfF8aSr02eJOVzXRalUavKsMMbENYm4TdOE53lCtSJd3L+ebtZHzCirPp7nCc+QfF5F
      UdZF/EBvB/hIwTAMGIYh/ifPSxh0XUc6nRZETC7Her0Ox3HgOI4wWsvlspC2uq43EV8ymRQ6
      eDQaFWuRiVbTNHDOxW7SDfEzxmCapvibIO8o9wpWrVZ5zw36YIOIkf52XVcQieu6Hf3nsvoD
      AMViEfV6HZqmIZVKCX9/sVgE0CDuMLVKXgvQkNaO48DzPKiq2tZoDoKqqojFYk2qleu6KBaL
      XdsPQXBdF8PDw6y3Azzg4Jwjn88jFosJAiPfvKqqTTtCGEh1cRwHiqII1UU2bknHNwyjbdzI
      L5XJ1coYQ7VabSL+SCTSZLwSaN2O4yASibTEJVRVRTweXzczBaHHAB8BaJoG27ahKEpTYCoW
      iwUygF/i02v5fB6apiGZTArViI6LRCJCveGcw7ZtQdxhsCxLGLqpVAq6rovYAalC/h0DaEjn
      Tn5/XdeRTCYFU8mR5fWgxwAPOBhjQsWpVqtNXpZKpRLIAJQikEgkmog8k8mIv/3+dooJrKys
      CNVDURSk0+mmyC69DjQImdZSrVbF9chQJrdqEKGHvS5DURTEYjERuxDRXU0Tu0snxugxwAMI
      cgMahgFVVQWh+P3xZED6oShKC2EwxkL9+f5zktdHVdUmRimXy7BtG5lMRujuZFC7rgvP80RU
      WDZkaTeQ19LNMwDW0ik0TRM7FHmw5FynMPQY4AEB51wQk67rcBwHtm03pS1Q7ozjOMILE0RM
      pLq0ixEEQd5tgqAoijDCiZkikQjK5bIwoiORCFzXFUykaRoSiURT/g7dR7tnQSqYqqrCJqjX
      64K5KG7RCT0GeEBAgR/6GwCSyWTLcbqud5XVaZomSqVSE7F2izD1xDRNkfFJx5EBDDTcl6VS
      qekzmqahUqlAVVXoui52tXYg9ygZ7rZtQ1VV1Ot1YQN1ix4DPACg9ASZ8DYa+CHouo5MJtM2
      TiCDdHlZzw7K4CRYliXSMIKS0ui6tVoNjLEWlYj+7rSmoES69aDHAA8ASD3w+/vJt07RXMrw
      9CPI60P/r4eBisWiYADaafwpysQkxWKxKUIbhCDC9TwPpVKpK9WMjOCglIhu0UuF2OaoVqsi
      7E+6LkEuRgnzh3POkcvlAglEzgEi+HVn+X2ZkOv1elNynOx5krM+w67pT2MgUES5W7emYRhI
      p9MwDAOapq1bnevtANsYlPNCkJPQotEoDMMQLkWgVcKT+zEsL57cmslkUujqlAJRq9WEdKU0
      5EQigVKp1JR2TARLuf26rovcf8aY+JvWJ+fpB3mAqIilm6Ic+Z4pvbpWq60rONZjgG0IMu5k
      g052U5IR6Hme8LCkUqkW6Vev10UuvW3bLRFcOmelUkE6nRaSm3KD8vm8kPDJZBKMMRiGIVya
      AJry+V3XRSwWg2ma4jiKBXieB8/zEI1GxU5CuUOe5yGfzwNoGNLdFL/4Ydt2S7q2H4ZhtHiG
      egywDSHn3QAQhKdpGjRNQzweF7o2qT+WZYnjiBEodRloEJtfX2eMIRqNCg+ToiiCGer1uiAW
      WUKbpgld18VrpLMTisUiTNNENBpt8UaR6kMMQO9TTQIxzkYMe8MwRN0B7ZS6rqNSqYjkvXg8
      LmoQyJPWY4BtCFJzOOciE5NqdckWcBwH+XxeSGxKUaZgE52nr69PHAesGakUQCPJbNu2KFWs
      VCpNRCirPABE4InORyAbJYyA2xndtMNs1KNDMQqyl2hnicfjYq0kIGT0jOBtCEVREI/Hm4w7
      Cn7JufiynkzEZVmWsBs45yJrkqq8KpUKcrmcUK8ikYhQV2iX6MaXLuccEcMF+fnbwW8Me563
      bj++DGJA8iDJZZxhjNdjgG0IOYMSgIj2lkolod74i1JkCS8Xi6RSKWEkl8tlsfWToUhJc7FY
      rKlViqwrUx6QDJn5SJUh26VQKIRKclKZarUaSqUSCoWCuJaiKPfcocRfHNNJneqpQNsYfv+6
      pmlCh6U8HIoRyKAqKlKZSD+m9/znJoIhG0NVVbiuK5iMjFhSneQ0BAAt1ycjmn5Ho1GxJsuy
      Wlyt1M2h274/m4keAzwgoC4MAETOvyxl/R4OUkXq9XpgagQZsrZtixQG2ikou5KYJJFICMO1
      Vqs11RuQh0kGtTSh9VFxTZh6I3eeuN/FWT0V6AGE368vG3e09cv5OH6Qblyv11EqlQIlOL3m
      99vLxE7qVLvoMwDhpeoEv7F9P9DbAR5AJBIJITWBBkNomoZ0Oi3UFcrDoQov8scDaEobDuq1
      QzYIuSyJmfy7Dn3ONM2mgN1GoKqqWNf9RI8BHlBQlZacF29ZVlM/H/Kt+/Nq5PqBIKJjjCGd
      Tre8TtdrJ/nXs36Zmfzu2fuFHgM84CAVZWVlpel12hE2g5hkwzkajYoSTDkyTTXJFMBLJpNt
      MzUpvkGg5rn3Gz0G2GYgFaZer6NerwvCagciQLmF4UbSCbpdH+Xty9cn4zWTyYi8oEgk0mRf
      yO5SKtihFI31JrFtFnptUbYRyuWycBMSVFVFIpFoCXoFoZs62h4aqNVqiEajvbYo2wlykpn8
      Wj6fb2oTrqpqYAfnrSJ+f9UYBbwcxwHnHJFIpG0J43ZGjwG2EUzTDK1jJZ89pRiXy+W2eTf3
      AjJIFUUReUhy9RkVvxOIEShN25/KHFaQsx3QY4BtBMrk7CafnZghFouti7DkLFJ/Z2hCoVAQ
      vXmICSjBLEjNkrvQUUNdupZt26LsEWikdcjrACDqeanA/X4yTI8BthEof75bWJa1LgOSjGvy
      vqiq2uLuJGkOQOQUAWu5P47jiP5DfgKlmQKEarXa1PmNXK4UKaZrUQt1uXiGepJutWrVY4Bt
      BJngwtqZyKD2IZRq0E5i0nmp5WC7wRSUii2DCFGOMAeth0CjigjUUrFSqbS0Q6R6Z7lEk9ys
      Wx0cezAtl48gKJAVVKdLkGtoyTNUKBRQLBY71tA6joNcLod8Pi+CTbIrk65Lk1jkNVAgjaLJ
      QYymaZpgEqoNlkFtTKhdupxqQeWXfsYLSvTbbPQYYJugkwuT3iMCrVQqooszvU/ZlnLLEX8O
      jlzw4peuxWJRFNyQpKcqMXmEkr8QHmiW/rJ+T+eg3COZUeVWK2RU+9Mv5F1xK9BTgbYJ5NYe
      YeoPlRlSrS7tBkSwlNhmWRYSiQQMw8Di4iIGBgZa7AR/TyFya1YqFWia1lTyKPcSlc8jN8GS
      dxO/HUO1De0S4qiNO6V9ywbyVqLHANsE7bZ6Sk4zTVNIaQJFjguFgjgHtQYkIpIb4cq5Q/Ku
      IzeU9Rfj0zkty0IymRRVY+QZ8sOv48tu0rD7o1oE+ny5XBY7AdkPW+EV6jHANgC19wsCFatQ
      Qbu/SAZoVksI1J+HGISIjFSZoBRoSnajRlvye8BaKgPl9nfb8EpujEs7jf94TdNEe3aZMWnC
      JD2DzUbPBtgG6JQrL3czaDcUTvakyLn19Dk/wfoJkWqR/T1H5b4+8mtBKTTt9HW5Xbls0FNw
      j/r6BD2PoHvfDPQYYBsgGo0GlgMScZBUlOd0+Y8jhHmRHMdpUVfCYg5yq3E6v2wzUPpDpyns
      Mmhn8d+bv6uFfLwMf0xhs7CpDOD35fbQHSiFoK+vT7gogwJNpCeHSf12z92yrBYik2sH/KAo
      MLlLaU4XNaCS+wb5EcQY5OpsV6lGoHuTZwPLKtFm0tim2QAkoShEn0gkumrTvRUI2u4fBJAh
      Kuu8MjP4U55pQjrQrNMHMY/sLiXQALug74kI37IskXMkE57sMermWZPRLHt4wly/9Lrf2Ke4
      ABXcx+Pxe6axTaESzjkKhYIwvKit3r0OMNsIrt2cxP/9Z9/EpStXH8idiFQLalVC834J1HXN
      X2frbwfiR5DUJJ9/GKLRaFNRjX8XIZ3dj0QigVQq1bJ2Yjh5PWG7V9h3Rwa63DL+XrApOwD5
      nuV03fuRx0Ggh7CSy+EPv/8m5m0FS9/6EaLmz/F7X/kCBvv7RBHGdsxIlKEoCjKZTOg6qWbA
      j3Y1AmGS1i9lg9732xedhBqd07IskapBuUdBRe9BhE8uU1nNC4s+Uz7URrEpDEA1pHKvx/uF
      Kzcn8cOfvQIzPYBzMzks8QgYd8CZiqtOAv/u+y/j8kIBqmPhpSeP48XnntnWTNBpbWHvhxGz
      33Mjg4rnqS1ht+uT9XJytfo/T/1GOzGZDD+z0ufC6KlarYrdMMxu6ng/D3JF2PTsPP6fP/0L
      3ImOAYrEy/TA5YfhOjip5fCNL3+h8aDBsLiSw9ED+2EY999WoXz79X5hVIxCvnVqZEWzwWjS
      O0HuCxTEAABEU1rys4cl5FFxjhyxJlvBX3hfrVabGmt1gyDbrRuiphRyXdebJl+2A1WEPZAM
      cHd6Gtl8EX/68gXk795AeegAwLrYdbiHAVThLs/CSQ6iosWxK+LiMyf24ulHT99XFalUKono
      7r1AjvgSQ8kZl9TvU0aYFyWRSLR0kJZBY4+CJjqm0+mm2gJye5Inh/R1f4CNsbUeRJxzYej7
      R652AjkJqHinE1oYQG5+RIEUkizbSWW4OTmJ/+vffx95sw+uokFxauBapFnadwL31hiGcyiu
      jTSzETU0pE0Nv/3JJzDQl8Yrb7+PQq2OFz/2KPrb6OUdL7cqtckLwhgTkrS/vx/Amsuvm9wX
      13VRKBSacvcBNH1/RECu64o8Hb9qEQTTNAN7BQEQ/Tz9MAwD8Xg8cO1kN5AXiGoe5MIf8gzR
      rphKpYS7tVu1hmIXpVJJBA7boYkBDMMQbTVoWPLy8rL4QmT/LUXtgkLzWw3HcfCv/uLbeC/r
      AT7d8l7XIZ9Ld20wr466HgcHMG66+E+eP42jB/dvSGWhMUdU5EGqBACMjIwAaBi3pmmKRDTS
      hYMIsVqtIpfLNbkAicmAZqkZdo4gEFFSPILgOI5Yl5yBSggL5Pkh+/WprympUJQWzRgTuUbt
      ptsEgXaTSCTScT2iKJ7zxqQ9OQVVDjZQt18/qFvB/WSEufkFnF+sgqvmmp6/im71zDAXoYy6
      agDqmgSZtlT8b//wNp4du4jf/sJnhBQPKiek3VPXddFtmdQQ27aRy+WajD3btqHruvjyVVVF
      oVAQRS40cUUGtSXx3wuVE27ENUgNtEgKE2jgXSQSEYRFgyjk2EI32ZtynIjsDmJi+jxNvqFM
      U0r+k7Nfw8A5F1mw3UIh/72qqkgmk6LhaSfdlKTY8vKy6EG/1VhcycFl95Ye689l78ZzwhhD
      XTVxaT6PUqmEXC7X1PyVYNs2CoUCCoWCyGgkCSzP0pJ13nw+39RWkIxYUhey2WxLYYimaejr
      6xMMSIUksoQNQ9gcYaos83dmIxujXC4jl8vBcRzEYjEh/ACImQP5fL5tf09iUJp9JjfOouov
      Oe9IHvZBz6vTfcpDBbuBRlsMRRhphlO3Q8qojbbneUilUlviAuWco1Qu469+cQmecu+e27CH
      085l6IdlWSgWi6JzMgkEOnexWBQd1NoRBUlYAC36Ne3ARCi6riOZTIoJMnLSGk2M6QS5sJ0Y
      DWgQjm3bTTXCtm03dW/zPK9p55HjERRn0TRNMKw/EEZ1AXR913WRy+WQTqcF3VDSG9mfQGNX
      IKO+E2HTwI9uIaiJvgiarbTeSR1k5cdisU3xpnDO8eZ7Z5EtVjCbzePifBHT9tZlb3e7XtlP
      TZmLFL2V+/DTMd2M+wyzZSggRCAVKhKJiGmMADr25SEPCR1DHR+oPpikKh1Tr9cFk8lTHDlv
      lDrGYjHYto1oNCp2OWIooMFMZOjKtCDPHpCNdfn+XdcVwpdKPqnHqZ8mg9y1fhWuE1ooivT9
      jeiRVJKXSCS6GnTcCT86fxMXCmTsfrjE789Lkf+uVCrC2yJ/se226iCPTNAXKktMUotkogMa
      TEY1wjIBkDpLzGJZlsijoTGrZMP5PVX0+VQq1TSPgOyfoB5GdM/EmNVqtUkal0qllkiy7HEE
      Wsc+kV+/XC43eY7CYhXrdem3UNV6Cd8fGeSci2ZK9+LjnpmZwa35LBAd2PA5ukE3RrF4HeHP
      hoje79sOu6Zf0st/d7Mm+ZnTLkQ9d4JUOVKzKKOUpLzsIg2yDYiJqSqLGIDKJP1op+4R8xGo
      vtnfdS5IAFCvUWqnEgYqquk2un1PCnuYVc45F0bRRo3jsbExfP3ZM4i7G+87L4fHw35ovbJx
      /GFDXo+/ZYh/rYwxYRCTyhJ0f4lEQmRPUqCMJLI/niCD1DxySxKjy8UtMmQ7hppkUUDMj6Bo
      uH9ny2azwiVPdcNBcQ35/JSk1813uSG9QrbUZfglmWxYyUPfur3Gc0+cwdF9E/ijb7+MD4oc
      wMbtCv/DaKeCdHsev7Tqlnlk6S3voP7zBhG8f/3+WABJZ+q0QIapqqrI5/NNxE5eJsYaw/SI
      sEhHJ4aKx+OwbVuUM8r1x3KcwX8ftCPKadv++/RHquXvRdb56Z7IBezPKvWD7BCqtQijvU1L
      hqPF+EGWfjKZ3FCTo5GhIfy3X30R/+ovv4eLreGIjghVZzYo6dsRK9C+uD0MYUwANPRwy7JE
      O3H/cSShKY5Dxiito1qtCp970PrpNeoXBKxJZvl6sv5PhjH9LdspMoi4qdjef03OGzEoYlA/
      ZBuKArJ0rVqt1tRJLui+5ImXYbUDG1KB/L70TqCsw42qQ/FYDF96/CiYu74ZUluhzgTdc7fP
      gdDuS/ODCmP8PXXk65J6YNt2S3t18rnXarWOrm25NaPsoZEn0lPCml/9DVIvKZ2BDGgykmXC
      pl2g3bOSjXV6LWhGchioiCZIZdvwDrBe4pJ1R4ozkJTpBrt2juPhvgu4vZwHGENWTXSXALcF
      CLN75FGk7RwAflWm07MkCUm6OP0fJHXDmIumQXaDMLVOjln4bYygZ8IYa6uL0znCKtKSyWRL
      gT6w1imbjgu7vgzagfw7zZb5FsO2dYqIUsygW2s9nUrhv/snX8YPX34N756/jJU6B4cHgK0v
      EW6L4G8MRX5wWT8OIoR2u2IkEhENZymKTDk5lmU1pTl3ug6tqxuE2UUbie2EMTgRfyqVWlfz
      K7/bOZlMNtkk/nXLa6agpByb2DIRGmQQ0ZdI75E3op0EnJ+fx//3d9/Gv/yjP0WhUMAnn34C
      o5kEdtYX8Ot7Y9C84MLsDwPioUrBI3o9aJv2ey/os4ZhIJ1OI51Oi/m/xWJR+O9pYDZ5V7pJ
      gWinashr80v2oGPkc8r3HQZd1xGLxURzKxIM/sk3nUC7LKWOEOOn0+mWuFOQIJCdA4RN3QFI
      N1NVNdDokcPqBKod9g97cF0Xr7/5Jv7slfPIGf3ot23xsB5+6Cgu3/4RfnBlFq7ROs1wKxHm
      8fC/1s4opi9Hvl/TNKHrOlRVbdKVFUURUVv6jJxQRl2U5V1gowhSa7ohcvmYsONJ6nqeJ2JE
      691RLMtCoVAQ65RtFnl3SyaTwsD2g7xC9L1sKgNQLrc8RtOvQwbBX1aXXVnBn/ztd3FuxYGn
      pcCZghUthf/6j/4SmUQMumtjKjoOT9Hvu/rDeXD7cBn05ZRKpba10X4moC+MDD8A4vN0TXLv
      ycdRZuZGU1BoHfJnu2Em2Y0rM7XsJQLWVEIKfMkljBuB7H0iI1t+nbJJKYotG7/0zIhGN5UB
      OOeizYYskcK2aNoO5QKMSx9cwb/+Dz9B1hyEZ6yFtT1VR0lNo2QDgA58OEMFBdoZr5xzMSFR
      nq/VTlXx57lQqgKpSeVyualWQIZsF2x2VVs35/J7g5LJpIgBEcEx1igCWu9EGxnkzpWzZf25
      P3KPUdkGA9ZmFMjYdCOYbphK5BRFQT6fb+k3GY1GRaGN/EB2TezEk8cP4tzteUxXAVfffuWa
      suSWJSBB1vll6U3SyR8I8yMajQr1hmaBUUsSP7ER6MuW0w045+sOQG4U8jWoGS89F2rnTs+t
      mzWRzULxDbmqjN6XEwIJNAGHnCtyzlLQTLVNZQAyzkhvJZAfWwZ5NPwLikYi+J1f+SQS3/ku
      /ubSfDgDcH7/vT882CsiqwLye5SjI++GcrFR0G5ARjD57xVFQbFYDFQfg1ygsjeK3IX3uiu0
      8wQF2T22bWNlZQWc86YiHepiLXu3wkAqpBxxpvPTs4xEIqJrtf+zxGyapiGVSjXVXMjYsNVE
      DZpIF4tEIk153e2OJbUnCMQoz338aTDF94BWH0DcreJ0yoX+IXmAwiS37OEgopcJl3YBkmph
      0c9cLodsNot6vS6qyvzX6UZHp9R2CgK185fLgSo/UQf9BL3nPx+tgTpWyAxSKpXaBsDkeAOd
      T95ZSdUJa9BbKBQE0WuaFpqdvGEGIP0rlUqhv78f6XQ6lKOp2kzufRlW60kSM5VK4SuP7Mde
      w8Iew8aLu+M4ZpaxVyngf/3ap3B4R79giHbgroVqoQjuOcjduYpidkW8V164jVIuD69eQX5+
      Dpx7sCqtniqB1eWGSW85ekrBMAr+hblFw5iJktQ6Sf5OUWhiApKgxFCUGi0XxQTdR9A9drqm
      vL5YLNZ0PDGZ4zgoFouhDW/9HjIieFIj6/U6isWicA8HuTzJDqHzBT3nDatAZFnLORqdQKV8
      ctFDGBRFweefexqfe+YJcZ16vY5CoYCBgQHs3DEC9/JSx2tmb15CqcoxceQI9NQglq+dR7T/
      E+Art5EvcvD8+yhG0+B1C65ThhoZgBHtHFkMk3j+11VVFV4aOfc+7Hj/a0EqhywV5fO025nk
      OmZ/qgQZq0BzQC/McSFfO+ia8rlkg1ROYCMhWKvVRIRaPk8qlRL2jBwplidM+r07QajVam1V
      wHsOhK23bbUskWgLDJMm8lZH+u3g4CAYYzh6YB/ivLMK1L/vODRNgWLEYC1NwnIYFA4oZgxW
      9i6sch4eV1AtlVCcuYmlq++jkCt2dS+dVAMCGWt+RwA9j04E3U7v7hZBkptUNjlZrtvz0Odb
      jMpVIZdKpYTaQdF/2SmQTqcRi8XgeR7y+XwLDZEBS8RLP3JZqP/5BO1MtJOGYVOM4G7K/vzw
      PA9//Bd/i7EdO1CsWfitzz7XVaffK1evIh6PI5svwuroC/VQnJ9CeXkelZUFcD0NU8mhVq3A
      0BLIjI6hvKRh9OgpFG6dg6pryGVLXalWQZAJwx8AI108yPAPMiS7vQ79341fvZNE9xNTN+uQ
      dyQ59Zi+S9kTRDEM8v6RqzjMFgh7XjTfmLpMkJctEokEErycNuLHpjCAbdvC29AtGGMYGh6B
      qSn48a0FXP1//xZndg3g11/8VOD5z1++glPHj+L6zBL+5u3XYCkmXK1TejWDHk1h/Php6LE0
      GFOQGHoSuq4BqoZYOoPkyARUxpGaOAxV12FmCjCT9x5d9hMSY6wpDcTvzgySzkHnI+Zqt0N0
      u7Yg6Z1Op1GpVEJ7/weB1k01wP5ryYUxZLjSusldKsN1XRHYC4M8UZ5+1+t1JBIJeJ7XFAVu
      J1g3hQE4b0Qo1+NzZozhy595FowxnDl2GD99/W08ceqhwGO//7NX8ZfvTWL0R69hRsnANVJd
      rowh2jck/tMlXZNzDjPVL95T9cbD3ijxE0H6v0y/T14OjPnfD/o8HdOtZJa9L3QdvwcozIgm
      tWK9aeu07k6eKblvJxnaQR6tbjsSJhKJphnJ5DpNpVJi+rzcGzUI98QAlLdCQYv1gm5wZHgI
      X/3i5wKPcV0X527dhRNJY+peFitdcyM6dCf4u7H5dWUiQArudJLcYS5LmVEikYgofpGlIaWk
      UCwCCB6QQccTyKe+HpWWdHUi7nb3JMdCqFxWrkTr9hkQyAGjaZpoG09tI8kGkYNnQdhwSWQ8
      Hhdt/jba6bgb/OSNd3F1pQ6+/mKyJgSpGfeKIKkcJGWDjvOrQjKT+A3hoNeBhnFJhCd3haZ5
      u5Qm3E73l0Guw/VAUZR1z4IgVyjNPaZ7ot2RMYZCoSB2TQqukltYLnGUc6aAtfpjYgLDMNqm
      ga+bASgHWy6P26pRSEtLS/j7d67CjvVt2DAF2ueztFMt/KoC0N4j42cEmelkPXm61BYAACAA
      SURBVLldiWOQh8X/W/apVyoVZDKZptGljDERPW69h9a/5eutZ4eklOb1DrPWNA39/f0tO0ah
      UBDBVFLbqOU7rZmxxkwCfx0JterkvNGVmjxPFEMIXUu3i6Zq/PvZQvz1t99FzvYAY4tUF88F
      FCW0sqxFb+bN+i4ZtmGfkV8j0HwvchrIBO9vQhWmqxP8BEgTeuSWg2FxhrDvcD3PmFJfNmKE
      B31GzhaggXy0JnnN1IKS1Dz/eSORiIgtkAcobIfquG+RutOpd/xWYMfoaMPRuUmET2s36xUY
      lSwS+Skw1wE8F4wHR6b9urxcxhlkwAVdU+6yRueUWwjK0eMgRg8jfvqiyXAtlUqie3OQt8l/
      vnbxi07fM3lwNoseGGNNqk1Y5iuBiqvanY8x1uQtCkJHBqAub/eT8AkPnziOl44OIVqca0jr
      DUJ+AMOqjZdOjOHxQRXe6lyB5MIVJJZvIpW7A9Wtt3UvkncliPD9nyFPRxjByecIysMJIgD6
      n1J7SXembNFu3Jd+1cy/LvlewyB7mbYCfulP6yYw1qgFoJGt7WYet1tn0x36v/BEItG2p8pG
      wDkXswg6QVVVPHziOAxex9DCRSTrRTBwqFZrpU83iHELz+9O49uXZvFqKQErkoZeXMBEjOFr
      zz+OF0/tQyp3u7EjOGtFFkE++U4enDDilX9UVRX5KjR3N+gzdC75nLVaDfl8HtlsFktLS8Jo
      lK9Df3dC2C7RDptNF/5r+5kv6FpkH/jvfT3Q/H3+qeysr69vy3LJ3zt3ATuGh3D06JHA96u1
      Gm5PTePSjUkcmtiBRDqD6eQ4oKgwSwtwtSjWsx8wxqDaFTw+HsdAfz9KvAiuqnCVKFjERTbX
      ICCr7uCxvaNYcSq4vGyhrBprKdecw3IdXLl+A1bdhcI4HjpyuG11mF9yBR0n90pq50r27wxB
      9kfQsWHPQz4uTO1pd56tHKtFerycHiGrhv5dllQdAC15Zp7XGOrhtxcIGrkzCdRpeKuInzGG
      Tz77TNtjpqZn8UffeRlZR8U/3zmK//5rn8f//GffRcE1cHAwgemSg6zvnG2/dM4RcSr4jU+/
      iH/znZ+BqxoY95CuLiJimuiL6ljKFfCbL/0aUqv1pK+/+Ra+985lZDIZDCZjuDGziKmlKv7w
      1eswankc7I9i364JEQsJclPS3/QcOwWYOF8rAqH//QagfM/yazTFRYbcw6cbZgwauSR/Lkh1
      2yqEqS1hz5gI3/8MbNtGtVoVfVP90PwXosDGh4lD+/fif/nGAK7euIHDB/YjEongD774cVRq
      Fo4d3Ie/+eHP8c3ra73wO0m8vtoSfvu5M8ik0/CsCsxKDf1uAb/z4rM4fuxYYwsFQ2q1Bw1j
      DI+cfhhPPv6YIBjXdfHW2Yu4cHsGqmXg55cm8crZD/CpJx4G5xznr1zHzy9N4tefPonRocGm
      tclE5ycw+TjaTfwET1NkZMjHUuc9aopF093JLUpR+r6+vo7ES+7tblzHW4kg79p61RzOuYiP
      hKVWbF3P8XtEOp3CY2dOi/8P7tsj/maK0vAMyV8E/U8PZ/VLNOwSvvrUcTxx5hSKpRIWF+Zx
      IJPB737xK9i5c6fwPvjhf1iqquLJMyfx5JmTuHbjBq7lbHzn6hJikct4+OBu/PvXL8GuVvH6
      +xfx0mefb6pkEusO8MnL0XR5h+jkjfHHC2zbxvLyMhhjyGQyWFxcBOdc5MasrKw09WiVpX23
      qo/MpFuNsFkAMuR1h6XYE+NUKpVArWbbMkA7DEUUaK6NcdPBSrWOopZEtDgLKzYAo5pDNTkK
      YDX/RlPx/vQynvQ8MAB/8Lu/hR07dtzTNn5w/378i5078a2fvoafnL2Cl3/xOlwbYJqB12ZK
      2Hn2Ah47ebztlyb/lqV5u2NlyLtEX18fHMfBxMSEYAgKjlEaMqU3+O2MdgwWpC7Jrtp28YR7
      gdyJut0a5feo9aOs8lEuUK1Wg67rotZaxgPJADXLxvNjBh4+fBRjO0bxb771Yxw9eBiKEcFb
      14EbkiewCh0xXUexWEShUMS+fXs3ZQ2maeKlTz+LYsXCP96MYkJbwLxnoM8r46/OzYApKh45
      fjjws36ViIw4coUGHdPpHPIUT2BtZ3Ecp4mR/CpYJ29WGFZWVkQsYLNVZtqdOjGYfO9Uh5zJ
      ZERfqlKpJIRBPp8XnTaaduUHcVC2XE7JGEN2ZQWxWAyzc3P4F3/1M9hGoxBDdW2M1pfwP/3e
      1/Enf/7XKBby+P1/+rsYGNi8oRuO6+LlN97BD37wAzBNh+rVMVdxkRiZwD/7ymeg63pHApbL
      RIMS0YIyGuWWM3Q+v8Qk4pcDd3TNIOLvlDkpr50+G4lEum5v2S1IZaFyx/Wcm/rOyr2CHMcR
      r9POSGNSP5zusvcIfzZlf18fIqaJm9PzqOsNj5bmWvjs7gT+4Osv4dvf/R4mJyfx4vOfEIOp
      NwuaquLpR07BMRNYKNvwFA2qW0d1aQZvnr3Ylaol+/e7bUgVZjPQ3/L5gjxIQeekWWedIJ9/
      vbPkugFjjRqCbktt6VmQAJEbs9Fvio775xw/kAwQBMdxcP3ONACGFGy8dHQYn3/+Y/iTf3gZ
      P7twE8X0TtydW9iSa5umif/0K1+A7tVhOS5gxjGajODH566hUq02MWuYRJZbeXSDsF2lk8oQ
      FuU2DEOoTd1en346DavYCBhjgX18wtYQ9HkCzU4DIDptELYFA1y9dn3DswOAxoP46398FT+d
      dwFwPDGWwJc+8zxM08T87DSYpuPZXWl84cVPb5kLb3xsB4ZSMdh6HMf2jiMai6GkRPH6e+cF
      wcnSOCh20S0BtfPShJ2T1hD2WVLBwgzxdtcjfZvmI28WE7Rrn9+O+Ol9+W9/zESoi9vBBuCc
      iw5o6yVQy7LwNz/8OX5yZQaOx/HpQ8P4jRdfgGma4Jzj5VdegRmJ4tEzp7c0d4VzjktXruIP
      //ybGE9ouL1ShcEdGJlB/Be/8aLQk/3GnezbDgqY0fbtHwjRDZFROrR/CF0QUVH2pd9tuxFi
      pkBqJpNZ1/cZFKzLZrNtYwLdgOwAucHw6rDv7WEDkB97vSgUi/iX//bv8a2bRWh2Cb/7+D58
      /PQJ4ZXIFwrQdQPHjx7ZUuIHGvdw7PAhnNm/E/3pNPoNIG6oKBYK+N//7ud45d3zLTq7TPxh
      27icSdpNJZkfQZ/xX0+ODcjYCPFTUQ0NEl/POYI6Z4Rlc67nGciCB2i2i7bFDrBezC8u4a1z
      F7G8tIQfTluI2CV8bCKF/+irX4aqqiiVygD4h5LFWqlU8MMf/QhvvHsWMOOolIooKlHU0jvw
      wu4UfvUTT7Zsz/SbCFVmFCoOkYM4ZDN0gjzrK8j1ulEvUBjI9y7TEyVUdlMxSEJQZshsNiue
      h3/n6lZtZqzRmDeTyYjXNE3DwMAAe+DiADNz8/g//upHKJdLSFkr+LWTR/HIqScxMTEh1IRk
      MiEGft9vRKNRfPL553H1xi1cLjGM6AqqHNBrBQDNBfd+SdxOh5cDUEBrKnUYgs65Fbk8nPOm
      Ih8i9lKphEqlIuqG2+3E/r6m/skvQepit2vTNK3pc+QJeiAYgPNGktjs3Bz+7d9+G7xUw28+
      fRq3bk3CsapIJlMtkiss+WmrQd6LsZFh3Ji7DKRTiK0swI0ANSdYarfTtf3E34lhOsEfCAt7
      b73npJYnQdeQ2xSSnUd++aCdgdyVfrU4yEAPWrPruqhWq6L/LF3P87z7NyNsM/H2+Uv4q5ff
      g1FcwKeefgwPHT+Ggf5+WE9bOH/+PJaXlzAkJaB92FAUBV/84heQzeXgKjoef/7jePvCZXzq
      0RNtg1FBUVp5UqP8Xjup7td3/dcL8/Rs1BNHmahynpDfoAUgOjbIax4aWmtbw3kjec0/1MIP
      /z3oui7KTGkmMWONRgGyazcoj2lb2wCUyvrtn7+OQ7vGsXtsFMViAfv37fuwl9YVKEBDffvz
      +XxLACvsc+StIenaTjf36/hAg0jkSTIEmXj8RLqeSZIEIlSS/v7IdDt1S1VV0eqS1kNen3a7
      mywcFEURXTDkifYk/RVFETMC/J26x8bGtqcN4LouXn3jbczPz2GwP4PPfexx9Pf3AQCGBjcv
      jWGrQd0MSMAQUQQZuzL87lJ/Tr8Mf40yEK4q+Hcdv05N6oE/LTuMEGl38rto6XcnPZ2EgZzH
      ZBgGyuWyuO+gdcjMQVN46DXHcUS1GmNrdcv6aj6Y/162FQNwznHtxk2oCsN3f/hD/M5v/Doe
      euh40zH326uzUZDdYtu2YAB/opufuCjHye+xIe+Mn2n8EeaglAdZ7fFLY7/aRLsGnYda4NCU
      ShmUdhDUCnE9z8hPkHKfoG7OydjaLGJ5eibdG41UDWPkjgxQr9dRqVaR2uSEJxm0fV2fvIM3
      3zuL3aND+B/+m99HOn1/J0BuJhhr1BnQtisPiJNL/YIMW7/KEo1G4TiOKMaXW6cE6doyUxAh
      tPO+yIX7AMTgPSp8j0ajTa1WqKHtvWSB0n1Se3b/XDn/sUGQmZukv67rqFar4nn51T0/OjLA
      8vIyfvizV/C13/jSuma6dgPOOUqlMu5O3wXnHDHTxD/5zZe2PGh1v6DrOnRdF5IyFouJXJQw
      dSTMSKXcfposQ4wV5hKUidXftlH+289AJEl1XRd9+EmyUg6N4zhNxN/JLRnk2gUgulnQ/ZEa
      5l+XbNDLjBr0mxi3UqkgHo8LI5j+96+zo0N4dHQUv/mlL+LsuXOdDm0LzjneP3sO0zMzcBwH
      V65dAwBUKmUc2L8fR48cwb59+z4yxA9A6KCyHks7gXxM2I8fNCERaO1FGsYEQWqS/3j/Z8vl
      slhzpVKB53lNqk6Q29Kvl4e5a2XCJk8NdYum+6Jr+XfHdm1i6FgakSo7dto5He7JCzQ7O4e6
      U4eqKEgkk1AUFYl4DOVyGXemplAslZDPFzEyPIhqtYZypQJVVdGXTuHUqVMbuuaDCL+UpTlg
      sqtPLoaRj/UTDGNMSE2qNQjqU0Su03YJZfKxRDzUn5N2K5L2hmEII5JsEj+B+tccVulGoHWZ
      polkMimmANHw9G6eZ5hHi9ZJz5bmFMtr3b17N9sUN2ihUMCFixfx9FNPoVwuo1QqI51OiQ4H
      YQPxfplBFUx+PVbu/Q80qw+yt0ceUeXvOudXf7phAHldpGYRkVuWBdM0oaqqaETlL/TxG+7+
      +wqC7Jc3TROmaQr9vdN6yagPEi70P13fP0uYMD4+vjlu0FQqhaefegrA2vxfxtiW9o55kEFf
      mqzLA2suTb9+H0RoVAZIRvF6jEc/2sUQqIQwyIsUpHYFeaLC1iIzR61WE25jv1u30zVkpgt6
      PayLH7AFbtD70TPmowDSrf1fXjui8h9HNgF5a/zuVVk96MYn7z/W8zxhEPtVtHYIYoIwBvD/
      H8SM7dYb9prf/gk717aKA/yygIzjfD4vtnsaduH/Eul4+t8v7SmP3692yOdYj/tajkVwzoXL
      Vv67G1CrGZLqYUwgw68+hXmpglzFMtPS8yXjmmIWJChoBBOwTSrCfhkhF2iT/5u68hHC1Ae/
      Xu03GP3uVb+Xph38hqvruk1xBwAthTNh9ycf0606Jh8ftOP4d6ogD5hhGIjH4yJHiIie3Lqm
      aQqDeFvnAn3UQZ4KmnNFc3Vv37nTGPLGOTgHmNKqAhE9MdboTKGqKlRfThBFQBtMRWkYjQ+F
      kW8jgKSBg0Px69SrKtu7ly7h+aefRqZNoJKuK6cptLMHgDUDtp2L188U8vuKoogJlADEtU3T
      FPlYruvCNE2aNLM5XqAeNg4iDsqbd10X3/z2d+Du2Q89noSkzIi/CjPTuFJiSNRLMEbHm84X
      TtrBcGdvY/jAgc7HzUzi4IljjXUwBj51F6PpDDzOcWj//pYgqaZpwvtH0pfUkzBbQnafivvx
      7SJhtgE1eabh23Iqta7rGBgYaPIaWZaFaDS6PZPhfplAEmx2dg5vXryAyuI8pmaWMTAwhMjA
      IGYuXUBq3xG42btYKnjYu3sAhYoDricAboOZrW0d16PzM02HGo11PM7TdJjxxnGcc+DQQSxY
      Fpii4Afvvo39g8Nw6nUkolGMjoxgYXER6VQKY2NjYo4BjS5tZxT71Td/flQYDMNo8iQBa1my
      cnsV/3l6DLBNMDo6glvf+yam3BTipol6sQjXLiM7NQU2shf5u/PQPAdX8rNw6gowmIRt2TA8
      F0y5h+h5l7zi6SbqliVGzQJrY2f7Dh/GXLUKr65icX4B8VgMruNgfHwcKysrUJTGZHhN04S6
      F8QEQW5M+t0utkAJcJSqQUEvCuDJkWY/ekbwNkE6nYa6XMLg7t2YPH8WSjQGzUxiZGIUjAHp
      pImlpWUsL+TglpZRcQA7lkZ9cb7lXOsxervlABaNo5ovhJ/TdXEkkcRXPvc5HD9+HGPj4/jr
      b30L0Ub3BSwuLjalVAS5KTfivaKEt5++8RZeeeddXLl9R8y6qNVqojgmDL0dYBvh4UdP4i9e
      fxMDDz0KJZ5ApbCIK+fOw7tbwjOf+ThKVY54hOPyuxeh72ZAJIVSfgmp7CK0vsGGRezDet2g
      QeCc4/bZVxB5+Gkkh4D85EW898E8dh08iOrsNdS8BEadPKpDE+CWjWythjvlCrjHsbC0hF3j
      4+CM4a333sPO0dGmeRTy2igVIqwTRFjk+frkJD5QYlAScVyfncPh3buEIUzxC6o78BviPQbY
      Rhge24Pjx12k9+6HtqpePPO13wXQ+MIPP/ooOOeIp0dwsbiqHqQHUZq+hkxf55LQTsGlMJTn
      b8BmJlbms2AHd2N5dhGqzhCNGSiwBLJT55E10uiLDmH5gyuI9vcjPjAAbXgYP78zBXb5MtxE
      Ekw3cPXCRUwk4jhz4kRTajetj3KdwmaQMcawMDuFYsVGun8Yg31JnJ28jZylIGXGYOWzKNXq
      MBULmhEB4IjO0dQpm+wFoMcA2wrDw8PA3QUs37yBgX37YZcKABhquRU4jgvOFHDuwXMcGBWO
      +qoBrBgRcKcOpgdPXPejKeXBtrBw+VKrIiS9cPXdN8F5DU6B47GPn8a+J5/FXu7itR/8BAMJ
      FdWqhszIMFAvYuj006iXCshPT8OxLQzt24+Fu1PYa0aglUq4mc1ixXWwtLyMgwcOiHQOqgOm
      7g1UcyDXGpNrVVM11FYmMblk4ZnTB/CL119H8tgZXH3rdfCZSbym6+iPR/DIU0+BscbMZNM0
      hTFMM9mAHgNsKzDGoMXi0FNpZGdmYKTS4J4HY3QnolI6Mucc5Q+uYpE3XJKuEUXx1nUk9x8C
      U5s7MwRFhuXXuWaA79yPdtbCgfEDsJZvo99jWJyehlvN4daNaQzuOYgBw4abnoBqLSNnGVAV
      Bi2dRjSdRmFuFrmLF/GpUydx/NgxvPH225iPRqF6LhRVRTabxeDgIDjnSKVSWFlZEYROSX5y
      G0POOSKRCAZHx3Hl0kUcPDaC7778GpK7JzB78xriw3tRi0zj/fffwe7xMSyWHXz1Sy8KZsrl
      csLuIFukxwDbCNl8AVo0BkXXoceaM2i552L22gfo33sEvLiAs+++j8EnXoBhasjll5C/O41M
      voREJgI1NQ62MAlXT0DTyM/Bmn41Tgqo1Tz0ic5rMwd2A/M3MDQ+DmAcowcapaqLN29hz4Ex
      qPqBFr09mkqjduUKxnbswC/eeQe/uPwBdj72GFwAt5eWMNDXJ3r567qOSCQi3Jjk/qQa4beu
      XUfVcVEvlxAz6rg0k8fVwmvIRTPI58vYc+Jh3L16Ayc++3lM/uOPsWN4ENF0owCmXq+LFBJ5
      vCzQY4BthZplgYVU3dXLOczduobI6CHcfPmnGDz9COavXMHEyeNI7TqCaF8G2cvXUZmbgetc
      gletIPboZxGLJ1rOJRuCMbt2T4Zy/8ROzN24hfjwCIxE87W8eh07DhxEPJHAzXIZ4488Iq6L
      VeKWp7jIcx8oM7ZYLOFnV66Bje0EAJQmbyEzMYFDI8Dy3DzsxQIOPvFxzN+8iZ1RFQOL0/jc
      V7+MPSMpLFcbs4Q1TUMymYRhGCI20LMBtiFqdQeMBevxRnIAIzsaPXQ0LQqVMSic8uY5lm9O
      ov/hp7B0/hWUiyoAC7UblxA99XiQc2jToOo6xg4fxNz1G2CqCn01CY4xBjOdxoFEHMvZLHgs
      3pjtBqC+tIhq3cG1yUns3bmzyWVLZaSURvHjV14F37VXbFye68KIp7Bw9zrSO3chZ03CLRbx
      0EAKjz12AidPnBDd6dRcDrZtC+LvZYNuc0znC0A62JtTXryLG+cvIlaMIJ3Qce6tN5HYfwal
      hTlE01G4WgqGoWLHidOYuzUPt55HOaSoqlnid8cdnHPwWg3Tly4Hvu/W6ygvL6NvYk2fsopF
      7Ni9Cy7na8lLAJREEmVNw42FRewZb6RykLpz+84dTN69i8Sqweqm02CSN0iLRFDKZmG5HDFd
      B6wafu2hQzh17GiT14gxhuTqyFt/Yp6MHgNsE7iui7maDT0kvyw+tBOf+PrvAQCK01Mojilg
      0TU7Yfx4uvElGynsOJwCjzFYfTtDrycCUY4NzN1pNoI5ALaafcQ5uKICioJoKonxY0eD1+84
      mLl2o7meYNWrM9zfD+WDK2Cr7Sr11ThAwak3eXg455haWMTSyBgWPQ7ueVBTRhOLKpqGpcnb
      8LQIarkcxjWO0w8dD5buXTRx6DHANoGqqkjoGu5l4NBGUo6ZbiA6sbf9ca4D7rqw5ydD7QVV
      05DIpHD11degJxtc7Fo11Pfva9Q8qM1JB3a5jL2plCi2qVaruHrjJqZdDp0pYFrjGvmZm7j+
      wSSG9x/FxO4dcApZFOamkN55AO6ds/CQwcrsbbipMQwlunMDy+gxwDZC0q3j7gcXG/9ItFzL
      raCsrUVPvXodigdAUcHRUC90pwZNyh6t10rrZiYKSskJaKIAR1NQjWZQzGaRChky2LdjB7KL
      WegTjexS7nm4OXUX5y9dQq5chlKugK0aoWa1iqOPPYpSqYSZ+XlcmLyNZcdtMMvSktDMrr/1
      c+SrGvYebXidbl26jJXlLEZ4DMU7NzG6cxD/+o+v4Fe/+h9j6Eh7Rg5CjwG2EfaM7cB032iL
      hLUvX0I5PhaY6gA0JHSitIDI7v1ClSheuwx0KGFkjIFxDu6t1iB7q3GF1foCKiYXBTeJFHKL
      wQzAPQ+3LlyGm+gD9V5gioLvXbgKZXwveCwBcA/q3esYObAfZTD84zvvQUsmUY4nUGIKBg+1
      pmWPHDkK1y7jJ//uL/D4r34RpVINJ577NC785Ec4MBDD8vQy+sf2onD7MooH9iK5ToruMcA2
      QrFmgbENdltjzSkOkXQGaiULAFCrRZgBxSuMMSgpE2z+DgDAtepQdu4T1VJyp4nGCwbKSyXU
      iiWx87h2BRdefwvjJx6D5XKozMWFV36G8WOPoDp/FdmchVQqCzU5CENToZkGIuk0kE7DBeCi
      PRHOX7+A6TuzUEf34Pr588goFqZe/jFOHH4I/9lv/yrOXpmFYS3g9ooLcwOpnT0G2EaYLpaB
      5L21GyTowzuEJNYWp5DZG9xRW2aa7LUrjWoxX06+XKCyXLKxdP4GoGoAGG698wq0aBrFc5ex
      75GHce2dN3H4scdx4bXXEI2lUSrMoXg5h4FDp2EMZsACotIAUF1ZAQI0mNFDJzF66CTuXLwM
      jzN86bMv4PDBg6LjyDNP7QAAPLGuJ7WGHgNsI3zqxDH8+YWrUBMNb0ltZQ5vfP9H2HP4FIq5
      q5i6fBPHPv05AEBl4TZuvfU+jvzqFzD18j8g0z+KRD6P4WMPQ1M3luXuVSuoT09CWWUA1/MA
      zhv+e6rWMk14tSrUPYcbiWtaFKMnT2PqtVew/9HTGN4xiEtvvIVSoYZUTENxbhnq8E4s37yE
      1MDTTQxAqFcqqCwtYuHKB/AcB9zzGraCosC1LXiOCy89iL5oBEcPH25pyHsv6NUDbCMMD/RD
      s9Y6L0T6RrH74B5wDiTHDyHZtzb1Jja8G32jQ+BwoUbSqCxMYnl6GlMhfvrO4FiauY1b168h
      zxLQd0ygVF7Gzckp5LmJOzc/wJKlYKVchZruBy83ukUP7x7H1IULiOw9jhvvvgtVNwC3hp1H
      T2LfmUeQHp9AKq7AdhQo4LBLRVFbDM5RXlxAeX4e+1/4DBIjo6t9PKvILS4hsXMX7EIRuTu3
      kYCHFw7u2VTiB3o7wLaCYRjYn0nimq/KK7VjB6yV5ZBP6RjYswvV2xzmQD9gl1qO4G1T3dZQ
      teroHx+GVa5AVYdgF0vQdA2xhIlqYgjV6SvI111AjyPJClASKQweOoOBg6vJatUKakt3cer5
      z4pz7tw1AX1iPwDAmZ9GamAA2WtXoZommKqilstj5PhDDXtE0+GqOqqDg2CRGGbOnwcvFpAY
      GcWJgTSOH+xcu7xe9BhgG0FRFPzKk4/hD7/5bRTqLux6Gfl8BTU2i6RWhZabw/LdGZimAm4X
      YVs1LN+8hcHRDJK7OJSYCltpnY3WVayXA5w7iKTSqGUrYIxh4rHnwD0HH7z2GvoG4sjWEojG
      NVSWppEcGm4taYzGGinbqypMaW4GLNUHp1iAuzSLfQf3INbXB3AOz3Uxe+ECho+fWAuCXbuB
      WmYYaiwB7nmo2XUMGAYqlQr6k8nNecg+9Bhgm8EwDHzp8TP4k3/4PjInzqDv4Enx3tC+o5ia
      mkc5PgjGRpEcPwig4QaNxaqI7t5/T9eORaJYvDON/n0nkZubhVNcxNLsIvr3ncBAWoE+wGDN
      X4Ot9IWeoz48gcXr1zB08BDspQUMDfRBNYDkyaPQqPsIY1A0DenxcZQXFxAbGMTKnduw+kZF
      gT5TFGDHbhgrs0irDA+fOhl6zXtBjwG2IXZNTGDPxC7kWPNoJCORxO49Ku7cnkU5NiDiAgyA
      W1iBPXM7UNlxC8sohrSdZ4wJiZzuG0Zf3xDgNPR7w0hi1+4k4JVRzwIx561rvAAAEppJREFU
      BsT6RsA9D64XMvHSMFF1POQuncXA2CjS4+OBx7mOg/nZBZShAfMrQDLT2p3CcVAr5PDSV768
      6bMpCD0G2IZQVRXPHjuEv5uch7o670rkr0dj2L13J6auT6KYGAZWPTT1WApOZiTwfIZtAYnw
      kknPqiF/4V04ahRYmQEAcCMKL9Hf+BtrahQHwDhDv5eDqt9ZOwkdxFR4tSp4RMXi/CLuzq+A
      rbKlgsYxVmEFDjNgu3Xk7s4gPbEHrFhGZfENVItlmJlhaLCgxfpRKFUxv7CAvXv2bPRxtkWP
      AbYpdu/ahaFbU8hiLb2YmEA1TUwc3IuZazeRS4xAn7kGtmOXqAZrgaKGlksyxsBdB7W6ActZ
      a5AW82rg6bV++hxrCXSe50FPZJDetbflXMVrl1AHw8rQvgZP+Jol2/l5XLpwFQefeRGzr34X
      xtAQskUVY4f2wE0MgOfmML1UhWI5YCuzSOTnMDMzu86n1z16btBtCkPX8WuPPgwjnw1MclMN
      A6N7dsC58g5YJIJCdg6Lk1Or7nqO0swNzF69Dq9ewcy163A9D8WlxZbziBYqjAFMWfsJOE78
      Zgyuw4WvXv5RIlEow+PSlsGxamGDcw49MYjBZATlpSXUk4NI7zsCFBsRaz2eRCWbw+iRY3Br
      BdSW5lGvVfDmu2c36am2orcDbGP0ZzJ4aCCFty2voer4kJufgwsPhltALmfA4HdQGx1FRLWx
      OJ1FJlbHnXcWkVRcTJ19B9DiiPUPQlV8LcNXaXQ9XRX9rlXGGDynjsL8IiyjAgDQ6xXo6czq
      iTmspWVYTh3Lt24hZetQnBKWL7wPRcnAuX4eatyEzSMwTR27Hn8G+V/8FCdHd2D3viPrf3hd
      oscA2xwnDhzAwquvIc9UrBgxqFKJ49C+w1iYmUOmLwWzHkEUQN1zYXoWjGQGqX4beZchd+M6
      zHodWt8oZq7cwMTRhj99Ta1q7T5dtwF97iZ4PAluJsD1CL0JAMjP3MbtqRk8+tlP4ebrP0ap
      aGN4Yh+K6TEs372C/ApwaLCOGzPzGDvxCKrZJSRVA1Ujg/jxT8BjCkb6DBSVGDJDw3AqJcAw
      MMaWAM/FYdTw9f/xnyEVUeForWWdm4UeA2xz9KVTOHXoAIaHhzE1PYM3pmZQSDWM07vn3sbU
      5Ytw6kdRWlxEDib279yDiq3Amr+B63cc7H7uc7BKU0geOIKpDy4j3r/mlRGqVUB+js2iqDuA
      kq9D57PQUAdXdXiuB8aAZF8SdbuRcL3nsWdw47WfYiVbBMYGkNp1COX8VdSXl5A5dBoz7/4C
      TNfAowPQx0eRijZiFW4lh1RfFJwxGPGGnz+ezuCzAwoePfpxjI+PbfXj7bVHf1BQLBaxvJxF
      pi+Dv/zF2ygk+xoS3PMwee487PHwKKk+fweRNkUvXrmI2TcuwFYSLd3Xgpppcc6heRac0jUc
      eeY53Hz7NQwdPIWy5aDWNw6ghun3LuP40THMz0/DdVUYIxOonnsdyVOfbLq2VslCGRwEzBjU
      eg2/tX8Qn/nYRlPbuketVut1h36QkEwmRVuPR8ZH8Ob1W0gaOmK6hlnuwnbqgKYHfrZTUXwj
      L4eObZ28GPAJrMzdRCSlYrlShaNGsTBzF4ZpoowEqvNXUS8so1gdQXrHHkSGRjF37k30H38C
      rl2BZ6z5+51IGubyAhLxKL788AF84vFH1/to7gm9HeABBOccuVwOlmVBVVVUqzVcnryN92aW
      MGkzeKn+Jqo3Fu7AGBgGr5Tg1W3UFrPw2GpgzKvj7sU3UVYOIKbXkVteRLVSw96TT4ABKM5f
      RzZXQTKqoGox9A+k4JpDSMVUHHx0N8yhRuzBs2q4e/0OaslG5wqlWkQ6pkIbGBbrcPNZ5BYK
      8MxmnT5RnMU/f+lTOLwFuT5h6O0ADzgikYiYOL9z5zjGx8fweKGAufkFnLs5iUvLJdScRrRW
      tUoYt3R87mOPQlEU/OyNc/j7t6bAmQrOFWjRMbg1FdG+IagqUKzpjeiyXUSlxmCoHI7HoDML
      i7N3oep5xA4eR/7uHIYGh8EYQ+nObVjRPsBzJTdqo7Cdthfu1P32NsA5njy0G4cO3Fsax0bR
      Y4AHEIwxMbeXJk3ScOu+TBrPnjmFZ9t89rOfeAyapuBbb0zCgtQyhHPkFpcwsPcEAKC6Mo96
      rYTCwl3sO/NxZO/ehB5JIGYoqDkMtUK1YUAzhkh/P8YKOXDHxWKFwzUTQCkPa24atssARQEH
      g1avw7PLjcspGtRaCac+9tw9d7DeKHoM8ICCJp8Ui0XYto1oNCoayfpHEAX1CX3h6UdQKJTw
      vbMzWJxbQN1bgpOJITYwDlVhqOWXER05gMQIUBragUg8hfTIbhgaR3Y5h5QOROK6iPQaA0Mw
      BoagTF5FxFrAM48cgoERZAtFpOJx3JpbwutzZdipODJeFVkYYJ4LzS5jJRuW6r316DHAAwrG
      GoPIbdtGuVyGqqrQNA2RSASVSqXl+KB2Jk8+fARvXJ2HcuhRHBpgeO70flyanMMr1wqIpNcK
      3xP9DT0/sdqC/VDSxK5BDw8d3YOY7mBqYQmVUhH5kd1wR8YxogKfeuqxpgQ27lhIfPP72L9v
      F9RqFv/nd96BsvsI3GgNr73zNobH9+L43iG8f/4aTp95GMuLC41u2VuMnhH8gMPzPBSLRdRq
      NWQyGTGQTp42T7/9Q8w55ygUCvjhq+/jkYf2Y++uRiOtP/7L7+PdqepatulqxigDh664+LUn
      9uM3v/hp0YmNcw7LsvDqe2eRMA24rosDe3ZjeGhIXOv9N1/F2Ztz+J0vfQ43puZw462X8Z1K
      HIv5PJZvTuPrB1WMHn4cZlSDbujQ4iN44uSBlkmVm4WeEfwRgaIoSCaTYiegWVzUarzd2CHG
      GNLpNL78K882vfapJ47i/N03UceaW1XlNs4Mu/jylz6PAwf2t5wnEonghafC/fcPP/4x3Jn7
      D9AiUbDKArDjMDI3p7BsxlGr5fDWO9fxwpFnMX3jGuKqjZo5B0VR8cSJ4GL+zUIvGe4jAJp8
      Ytt2I1NT19HX19e2J2Y77N+7B198fA8YX8355xxH0lX8V//5P8XBgwc2cE4Pl8++gw8++ADX
      rpzHP/zsfaQNFc7yFOqugsTwGFZiB/HpFz6Oxx/aj0dOn4Km3cPgv3WgtwN8BCBPTM/n8+jr
      64Ou60gkEigWi2IaSjcjkuiY5558GD9+9wZWHBWGW8KZhw4hmdhoTg7D2K49+MY3voFoPI6v
      f20HOBQ8Vi7i9tUVpEYnoA2NwC4s4/DDT8AwDYzsziPRZhD3ZqG3A3wEYBgG+vr6kMlkRJAM
      aMQKUqlUU9fkbqZHcs6h6zo+dmIXVO7AUaPIpDP3sEKGdN8AhoaGkIjFMDg0hKGhAXz+E0/j
      kFKEHkvATWQwPTPbmPAIhnQmA/U+uEZ7DPARgaIoME0TmUwGjuM0emyi0W9fno4ItKY4yDuI
      fMyvPPckfv+Lp/HZU6OwQlqt3wsikQi++ulnkHAqUN06Usmty/oMQ08F+oiBRoxWKhWkUikw
      xtDX14dSqYRKpRI6fjRocLWqqjh6+ABOHD+C9BapI8cO7MNnrt3A6x/cxC5ptsBmjHftBj03
      6EcMnudhZWUFjuNgcHCwaV5uPp8XM7hkqd+OKYCGpM5k7kUFCkc2m4Xrukin06Lpleu6cF13
      05tgyei5QT+iUBQF/f39qFQqKBaLSCQSIkJMNkKt1pgLViwWEYvFkMvlhPuUvEk0khRA4Lze
      zUJ/f3/La36VbSvRY4CPIChNwrIsERug11OplLAR6vU6lpaW4LoupqenEYvF4DgOotEoXNcV
      O8NWSf8gW4TgD9ptFXoM8BEFJcz5++lomob+/n5ks1kkEgm4rgtd11GpVKCqqkipoP9pquJm
      gqZC0gwCmgwfiUQQXW0Dc7/wQDOA67o4f/4smGbi5PFjAADPraNStRFPxFGrVBCJxeA5DlRd
      X0/N90cCjLHAhlKapsE0TTiOA13XRURYtgdSq/O8NE1rSa67F9A4JF3XoWkadF0H5xyO46Bc
      Lgv1yzTNhkt0i5nhgWYAzjmq+Syy2XncXXYRV3KYuX4J6b4BqNEMVlbmMLr7JNxKDi+8EJYg
      /MsJ0zSFV0g2eOVsUnrPsizE4/GuiJFzLoxYUqPknUie3ki7DzEBfaZcLqNQKCCRSCASibS4
      aDcTD3QcQNM07Nk1jrvTyzh2/AAeO/MIZufn8eOfvwZN06DpOq6dexe3J6/hp6+f+7CXu63g
      r/eVA2Syh8jzPLiuK7xHnVAqlbC0tIRsNot8Po98Pi9iEvK5FUURk2joddqZyHAvl8vIZrMo
      FotwHGeth9E6hwG2wwPNAEAdiAzipS88g0vnryEej2N0fB/+4L/8Bt6/eBmPHz+IgydOYefE
      BKxCa1OoX2bY9v/f3tn0tm0EYfj18puiJdCyYRR2rgHaHAOkpx76D4oe+3d7KooiuQU9uamA
      QrbkSDZpk8tdcntwZkIqUuy4jiS7+1wsaI2VBOxwZ2fmna0AfJoEo6d/OwrUNA2urq46C3kZ
      tFuQSIee/l8azvR9H4PBgAU/ZVliPp9zzdND8sjzAAZv3/yGv88VfvzhFf45PceuU+LXP/5E
      thtAT6b45aef8dfbN+gff4tv9nq3T/k/QWuN9+/fr1zUi6FPYwziOMbu7u7KRaiUwvn5eefM
      kKYpog+3x38Jy5709LlZlkFKyUIgz/PYRburgVAe4JEbwHKapsHvr1/ju+fPsfuV+so/BbTW
      KIoCeZ6vLI+g13ROGAwGCIKg8z4t+IuLC5Rl2ZkjTVM81Pqi76iUwtnZGcqyRJIkoFvmoyji
      70afv4onnQgTQuD7ly83/TW2Htd1kSQJhBAoyxJa646QZrEcgQQ0QgjEH257V0qxa0JVp5R1
      Hg6H98rmUqSoaRqEYchnhaqqUFUVnx+01uj1ehy+bd9zTB0zPM9jV05K2TEQ4NG7QJaHgJ6s
      pC5rSyoXDWAxL9A+TI/HY3ieB6UUoijCs2fP7u3+0GJelYcwxkApxWHcxbHFAz39PjKGJ70D
      WL4MWiCO42AwGCAMQxRFwQKb9k5At8jTe/Sanv5pmkJKibqu731g3dnZubX8gtyeVWPLPntZ
      dtkagKUDyRuDIEBd16iqCkVRQErJ43Ecc8SHe4lWFTzPQ57n8H2f3ZJVIctNtUEBwEYNWBfI
      cgvtg6dSCr7vc9GcUgqXl5eYz+csoqExKnUgY6G5SMO8jizv536TlPLpRoEs66NpGpycnHR8
      fa016xEISqplWYa6rjEcDnF4eLgxI6AzwCNPhFk2jRACR0dH3JjLGIPJZMIFb3SYlVLi9PSU
      tQUk1tk0dgewPAgUucmymxsmi6LgUGZRFIiiCFEUQQgBYwwODg46pRDrxkaBLA8KRW5IdNPv
      92GMwWw2g+M47CK1I0jbgDUAy4PTDkPu7e3Bdd1Oa5b/qjGg8umqqviQfV8BjT0DWL4qQgj0
      +32EYchlC/dd/ORmlWWJ0WjECTuKULVVbHfF7gCWrw61bBmNRlBKwRjD1Z53wRjDYhmtNbIs
      4xArFfRRi/g0TXk3aCfqKPZPY1TyYQ3AshZc10W/3+endFVVd27dSNrmdtJtf3+/k4EGbhY1
      5SSapoHruuj1eqiqihsBJEnC5RqANQDLmqDKUK018jzHbDZDlmU4PLxpvU5+PdX3UI0Pvd9e
      /KRVIP1yu6S7/VopxV3yaC7aPWj3sQZgWQuk+CId8GQyweXlJeI4huu6kFLy/8znc7iuy90p
      8jzneYQQfAAm46D5P+f/t8dJeglYA7BsACEEer0e64SzLIPneSzMdxwH0+kUs9kMSashrzEG
      rutiMBggy7JOpjnPc3ieh7quuTQ6CAIW4Nd1jSiKeJch3YI1AMvaIWF8kiS8UGlB0i5ATb3o
      SU1jwI0BVVXFY0IIuK7LmWbgRlZ5dnYG3/cRxzGKokBd15hOp4iiiF0gmwm2bCXX19fsvwMf
      Fz/9lVJyNapSCsPhEHme87VR1PalKAo2KqUUV7kqpfDixQubCbZsJ2EY8gF3We6A+gYRs9kM
      Ozs7nBuIogi+7y/VDJABANYFsmwp1DGO/PnFnAEJc5qmge/7GA5vLvVrh0tXQVJJwBqAZUt5
      9+4dgiDAxcUFlFKI4xh1XXOfImriG8cx90FNkgRSys7hGPi01Xo7rGoNwLKVCCE4a1wUBYQQ
      XEPkOA73E6WSazIGCqmSe9Q0DcbjMcIw5Dl93//Y+nGTP9JiWcXx8TGm0ymCIECapgDwiSuk
      tebyaoJ2DTIAIUSn9TslwTiitMbfZLHcCpVJXF1dAfjYoIvcmHbXucWaHwCcUGsThiHm8zln
      j2k+APgX+zpdY8lgrBwAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
